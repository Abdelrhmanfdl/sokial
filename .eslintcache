[{"E:\\sokial\\sokial\\src\\index.js":"1","E:\\sokial\\sokial\\src\\App.js":"2","E:\\sokial\\sokial\\src\\reportWebVitals.js":"3","E:\\sokial\\sokial\\src\\components\\signup.js":"4","E:\\sokial\\sokial\\src\\components\\login.js":"5","E:\\sokial\\sokial\\src\\components\\profile.js":"6","E:\\sokial\\sokial\\src\\components\\posting.js":"7","E:\\sokial\\sokial\\src\\components\\post.js":"8","E:\\sokial\\sokial\\src\\components\\postsProfileSection.js":"9","E:\\sokial\\sokial\\src\\components\\profileHeader.js":"10","E:\\sokial\\sokial\\src\\components\\mainBar.js":"11","E:\\sokial\\sokial\\src\\components\\FriendshipNotificationsButton.js":"12","E:\\sokial\\sokial\\src\\components\\friendshipNotificationsButton.js":"13","E:\\sokial\\sokial\\src\\components\\notificationsContainer.js":"14","E:\\sokial\\sokial\\src\\components\\friendshipNotifEntry.js":"15","E:\\sokial\\sokial\\src\\usable functions\\endpoint-related.js":"16","E:\\sokial\\sokial\\src\\components\\postCommentsSection.js":"17","E:\\sokial\\sokial\\src\\usable functions\\general.js":"18","E:\\sokial\\sokial\\src\\components\\postComment.js":"19","E:\\sokial\\sokial\\src\\components\\postEditing.js":"20","E:\\sokial\\sokial\\src\\components\\home.js":"21","E:\\sokial\\sokial\\src\\components\\postsHomeSection.js":"22","E:\\sokial\\sokial\\src\\components\\profileImg.js":"23","E:\\sokial\\sokial\\src\\components\\profilePostsOption.js":"24","E:\\sokial\\sokial\\src\\components\\profileFriendsOption.js":"25","E:\\sokial\\sokial\\src\\components\\friendEntryProfileFriendsOption..js":"26"},{"size":231,"mtime":1611459015441,"results":"27","hashOfConfig":"28"},{"size":7069,"mtime":1616250559034,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":11531,"mtime":1611632160414,"results":"31","hashOfConfig":"28"},{"size":3163,"mtime":1611570261559,"results":"32","hashOfConfig":"28"},{"size":3442,"mtime":1616250515494,"results":"33","hashOfConfig":"28"},{"size":4361,"mtime":1616256962176,"results":"34","hashOfConfig":"28"},{"size":6088,"mtime":1616250508216,"results":"35","hashOfConfig":"28"},{"size":9629,"mtime":1616257288803,"results":"36","hashOfConfig":"28"},{"size":3360,"mtime":1616250569229,"results":"37","hashOfConfig":"28"},{"size":1986,"mtime":1612289921352,"results":"38","hashOfConfig":"28"},{"size":884,"mtime":1611910578522,"results":"39","hashOfConfig":"28"},{"size":5002,"mtime":1612290028624,"results":"40","hashOfConfig":"28"},{"size":248,"mtime":1611924095031,"results":"41","hashOfConfig":"28"},{"size":1399,"mtime":1613440904775,"results":"42","hashOfConfig":"28"},{"size":1375,"mtime":1611999343698,"results":"43","hashOfConfig":"28"},{"size":13138,"mtime":1616255951664,"results":"44","hashOfConfig":"28"},{"size":261,"mtime":1612055288154,"results":"45","hashOfConfig":"28"},{"size":5068,"mtime":1616250728114,"results":"46","hashOfConfig":"28"},{"size":2051,"mtime":1616257067686,"results":"47","hashOfConfig":"28"},{"size":350,"mtime":1613363893079,"results":"48","hashOfConfig":"28"},{"size":9872,"mtime":1613429644534,"results":"49","hashOfConfig":"28"},{"size":3830,"mtime":1616250738308,"results":"50","hashOfConfig":"28"},{"size":1317,"mtime":1616250616970,"results":"51","hashOfConfig":"28"},{"size":2882,"mtime":1613825725022,"results":"52","hashOfConfig":"28"},{"size":2247,"mtime":1613827341863,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"f5302e",{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},"E:\\sokial\\sokial\\src\\index.js",[],["118","119"],"E:\\sokial\\sokial\\src\\App.js",["120","121","122","123","124","125"],"E:\\sokial\\sokial\\src\\reportWebVitals.js",[],["126","127"],"E:\\sokial\\sokial\\src\\components\\signup.js",["128","129"],"import { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\n/*\r\nTODO :: Show and handle invalidation of account creation\r\n*/\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { countries } from \"../data-stores/login and signup.json\";\r\n\r\nconst maxNameLen = 20,\r\n  minNameLen = 2,\r\n  maxPassLen = 20,\r\n  minPassLen = 6,\r\n  maxCityLen = 20,\r\n  minCityLen = 2;\r\n\r\nconst validationSchema = yup.object({\r\n  fname: yup\r\n    .string()\r\n    .min(\r\n      minNameLen,\r\n      `First name should be of minimum ${minNameLen} characters length`\r\n    )\r\n    .max(\r\n      maxNameLen,\r\n      `First name should be of maximum ${maxNameLen} characters length`\r\n    )\r\n    .required(\"First name is required\"),\r\n\r\n  lname: yup\r\n    .string()\r\n    .min(\r\n      minNameLen,\r\n      `Last name should be of minimum ${minNameLen} characters length`\r\n    )\r\n    .max(\r\n      maxNameLen,\r\n      `Last name should be of maximum ${maxNameLen} characters length`\r\n    )\r\n    .required(\"Last name is required\"),\r\n\r\n  email: yup\r\n    .string()\r\n    .email(\"This email is invalid\")\r\n    .required(\"Email is required\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      minPassLen,\r\n      `Password should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxPassLen,\r\n      `Password should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"Password is required\"),\r\n\r\n  gender: yup.string().required(\"Gender is required\"),\r\n\r\n  birthday: yup.string().required(\"Birth day is required\"),\r\n  birthmonth: yup.string().required(\"Birth month is required\"),\r\n  birthyear: yup.string().required(\"Birth year is required\"),\r\n\r\n  country: yup.string().required(\"Country is required\"),\r\n  city: yup\r\n    .string()\r\n    .min(\r\n      minCityLen,\r\n      `City should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxCityLen,\r\n      `City should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"City is required\"),\r\n});\r\n\r\nconst Birthdate = (props) => {\r\n  const minPossibleYear = 1900;\r\n  const date = new Date();\r\n\r\n  const years = [],\r\n    days = Array.from(Array(31).keys()).map((x) => {\r\n      return { label: String(x + 1), value: x + 1 };\r\n    }),\r\n    monthes = Array.from(Array(12).keys()).map((x) => {\r\n      return { label: String(x + 1), value: x + 1 };\r\n    });\r\n  for (let i = date.getFullYear(); i >= minPossibleYear; i--)\r\n    years.push({\r\n      label: String(i),\r\n      value: i,\r\n    });\r\n\r\n  return (\r\n    <FormControl>\r\n      <Autocomplete\r\n        id=\"birthday\"\r\n        name=\"birthday\"\r\n        style={{ width: 300 }}\r\n        options={days}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthday &&\r\n                Boolean(props.formik.errors.birthday)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthday && props.formik.errors.birthday\r\n              }\r\n              {...params}\r\n              label=\"Day of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newday) => {\r\n          if (newday) props.formik.values.birthday = newday.value;\r\n          else props.formik.values.birthday = \"\";\r\n          await props.formik.handleChange(\"birthday\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthday && Boolean(props.formik.errors.birthday)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthday && props.formik.errors.birthday\r\n        }\r\n      />\r\n      <Autocomplete\r\n        id=\"birthmonth\"\r\n        name=\"birthmonth\"\r\n        style={{ width: 300 }}\r\n        options={monthes}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthmonth &&\r\n                Boolean(props.formik.errors.birthmonth)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthmonth &&\r\n                props.formik.errors.birthmonth\r\n              }\r\n              {...params}\r\n              label=\"Month of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newmonth) => {\r\n          if (newmonth) props.formik.values.birthmonth = newmonth.value;\r\n          else props.formik.values.birthmonth = \"\";\r\n          await props.formik.handleChange(\"birthmonth\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthmonth &&\r\n          Boolean(props.formik.errors.birthmonth)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthmonth && props.formik.errors.birthmonth\r\n        }\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"birthyear\"\r\n        name=\"birthyear\"\r\n        style={{ width: 300 }}\r\n        options={years}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthyear &&\r\n                Boolean(props.formik.errors.birthyear)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthyear && props.formik.errors.birthyear\r\n              }\r\n              {...params}\r\n              label=\"Year of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newyear) => {\r\n          if (newyear) props.formik.values.birthyear = newyear.value;\r\n          else props.formik.values.birthyear = \"\";\r\n          await props.formik.handleChange(\"birthyear\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthyear &&\r\n          Boolean(props.formik.errors.birthyear)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthyear && props.formik.errors.birthyear\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Signup = (props) => {\r\n  // Redirection to 'home' is a token recognised\r\n  if (document.cookie.indexOf(\"; token\") > -1) {\r\n    window.location.replace(\"/home\");\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      birthday: \"\",\r\n      birthmonth: \"\",\r\n      birthyear: \"\",\r\n      gender: \"\",\r\n      country: \"\",\r\n      city: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      const user = {\r\n        fName: values.fname,\r\n        lName: values.lname,\r\n        email: values.email,\r\n        password: values.password,\r\n        country: values.country,\r\n        city: values.city,\r\n        gender: values.gender,\r\n        dob: values.birthyear + \"-\" + values.birthmonth + \"-\" + values.birthday,\r\n      };\r\n\r\n      try {\r\n        const res = await fetch(\"/signup\", {\r\n          method: \"post\",\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const resJson = await res.json();\r\n        if (!resJson.valid) {\r\n          console.log(resJson.message);\r\n        } else {\r\n          // valid request\r\n          props.gotUserData(resJson.userData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <FormControl>\r\n        <TextField\r\n          id=\"in-txt-fname\"\r\n          name=\"fname\"\r\n          label=\"First Name\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.fname && Boolean(formik.errors.fname)}\r\n          helperText={formik.touched.fname && formik.errors.fname}\r\n        />\r\n        <TextField\r\n          id=\"in-txt-lname\"\r\n          name=\"lname\"\r\n          label=\"Last Name\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.lname && Boolean(formik.errors.lname)}\r\n          helperText={formik.touched.lname && formik.errors.lname}\r\n        />\r\n        <TextField\r\n          id=\"in-txt-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n\r\n        <FormControl\r\n          component=\"fieldset\"\r\n          error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n          helperText={formik.touched.gender && formik.errors.gender}\r\n        >\r\n          <RadioGroup name=\"gender\" row onChange={formik.handleChange}>\r\n            <FormControlLabel\r\n              value=\"m\"\r\n              control={<Radio />}\r\n              label=\"Male\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"f\"\r\n              control={<Radio />}\r\n              label=\"Female\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <FormHelperText\r\n              disabled={formik.touched.gender && Boolean(formik.errors.gender)}\r\n            >\r\n              {formik.errors.gender}\r\n            </FormHelperText>\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Birthdate formik={formik} />\r\n\r\n        <Autocomplete\r\n          id=\"country\"\r\n          style={{ width: 300 }}\r\n          name=\"country\"\r\n          options={countries}\r\n          autoHighlight\r\n          getOptionLabel={(option) => option.label}\r\n          renderInput={(params) => {\r\n            return (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a country\"\r\n                variant=\"outlined\"\r\n                error={formik.touched.country && Boolean(formik.errors.country)}\r\n                helperText={formik.touched.country && formik.errors.country}\r\n              />\r\n            );\r\n          }}\r\n          onChange={(e, newcountry) => {\r\n            if (newcountry) formik.values.country = newcountry.code;\r\n            else formik.values.country = \"\";\r\n            formik.handleChange(\"country\");\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"city\"\r\n          name=\"city\"\r\n          label=\"City\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.city && Boolean(formik.errors.city)}\r\n          helperText={formik.touched.city && formik.errors.city}\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          SignUp\r\n        </Button>\r\n        <small>\r\n          <span style={{ color: \"gray\" }}>already have an account? </span>\r\n          <a href=\"\\login\">login</a>\r\n        </small>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\sokial\\sokial\\src\\components\\login.js",["130"],"import { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst maxPassLen = 20,\r\n  minPassLen = 6;\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"This email is invalid\")\r\n    .required(\"Email is required\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      minPassLen,\r\n      `Password should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxPassLen,\r\n      `Password should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Login = (props) => {\r\n  // Redirection to 'home' is a token recognised\r\n  /*if (document.cookie.indexOf(\"; token\") > -1) {\r\n    window.location.replace(\"/home\");\r\n    // TODO :: Get a way to enforce not show Login component\r\n  }*/\r\n\r\n  const [loginError, setLoginError] = useState(null);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      const user = {\r\n        email: values.email,\r\n        password: values.password,\r\n      };\r\n\r\n      try {\r\n        const res = await fetch(\"/login\", {\r\n          method: \"post\",\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const resJson = await res.json();\r\n        if (!resJson.valid) {\r\n          setLoginError({ message: resJson.message });\r\n          console.log(resJson.message);\r\n        } else {\r\n          // valid request\r\n          props.gotUserData(resJson.userData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form id=\"login-form\" onSubmit={formik.handleSubmit}>\r\n      <FormControl error={loginError}>\r\n        <FormHelperText disabled={loginError}>\r\n          {loginError && loginError.message}\r\n        </FormHelperText>\r\n        <TextField\r\n          id=\"in-txt-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n        <small>\r\n          <span style={{ color: \"gray\" }}>want to create an account? </span>\r\n          <a href=\"\\signup\">signup</a>\r\n        </small>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\sokial\\sokial\\src\\components\\profile.js",["131","132","133","134","135","136","137","138","139","140","141"],"E:\\sokial\\sokial\\src\\components\\posting.js",["142","143","144","145"],"E:\\sokial\\sokial\\src\\components\\post.js",["146","147","148","149","150","151"],"import { MenuItem, Menu, Grid, Button } from \"@material-ui/core\";\r\nimport PostCommentsSections from \"./postCommentsSection\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport PostEditing from \"./postEditing\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbUpOutlinedIcon from \"@material-ui/icons/ThumbUpOutlined\";\r\nimport CommentOutlinedIcon from \"@material-ui/icons/CommentOutlined\";\r\nimport { set } from \"date-fns\";\r\n\r\n/*\r\nProps: \r\n- id: post id\r\n- postIndex\r\n- postAuthorData\r\n- myReactionType\r\n- content\r\n- identity\r\n- toggleReaction\r\n- handleDeletePost\r\n- handleEditPost\r\n- specificStyle\r\n*/\r\n\r\nconst Post = (props) => {\r\n  const [openCommentsSection, setOpenCommentsSection] = useState(false);\r\n  const [menuAnchorElem, setMenuAnchorElem] = useState(null);\r\n  const [editingPost, setEditingPost] = useState(false);\r\n\r\n  const postContentRef = useRef(null);\r\n  const authorProfileImgRef = useRef(null);\r\n  const isMoreOptionsOpen = menuAnchorElem !== null;\r\n\r\n  const handleOpenMoreOptions = (event) => {\r\n    setMenuAnchorElem(event.target);\r\n  };\r\n\r\n  const handleCloseMoreOptions = (event) => {\r\n    setMenuAnchorElem(null);\r\n  };\r\n\r\n  const handleToggleCommentsSection = () => {\r\n    setOpenCommentsSection(!openCommentsSection);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      authorProfileImgRef.current &&\r\n      props.postAuthorData &&\r\n      props.postAuthorData.profileImage\r\n    ) {\r\n      authorProfileImgRef.current.src = props.postAuthorData.profileImage;\r\n    }\r\n  }, [\r\n    authorProfileImgRef,\r\n    props.postAuthorData.profileImage,\r\n    window.location.href,\r\n  ]);\r\n\r\n  const handleClickDeletePost = () => {\r\n    props.handleDeletePost(props.postData.postIndex);\r\n    handleCloseMoreOptions(false);\r\n  };\r\n  const handleClickEditPost = () => {\r\n    setEditingPost(true);\r\n    handleCloseMoreOptions(false);\r\n  };\r\n\r\n  const handleToggleLike = () => {\r\n    props.toggleReaction(\r\n      props.postData.postIndex,\r\n      props.myReactionType ? null : \"1\"\r\n    );\r\n    fetch(\r\n      `/post/react/${props.postData.id}?` +\r\n        new URLSearchParams({ reaction_type: \"1\" }),\r\n      { method: \"POST\" }\r\n    ).then((res) => {\r\n      if (!res.ok) throw new Error();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid id=\"tmp-post-container\">\r\n      <div className=\"post\" style={{ ...props.specificStyle }}>\r\n        <div className=\"post-header\">\r\n          <div className=\"post-identity-container\">\r\n            <a\r\n              href={`${window.location.origin}/profile?id=${props.postAuthorData.id}`}\r\n            >\r\n              <img className=\"post-profile-image\" ref={authorProfileImgRef} />\r\n            </a>\r\n\r\n            <a\r\n              className=\"clickable-account-name\"\r\n              href={`${window.location.origin}/profile?id=${props.postAuthorData.id}`}\r\n            >{`${props.postAuthorData.firstName} ${props.postAuthorData.lastName}`}</a>\r\n\r\n            {props.identity.id == props.postAuthorData.id ? (\r\n              <div className=\"post-more-div\">\r\n                <Menu\r\n                  open={isMoreOptionsOpen}\r\n                  anchorEl={menuAnchorElem}\r\n                  onClose={handleCloseMoreOptions}\r\n                  keepMounted\r\n                >\r\n                  <MenuItem onClick={handleClickEditPost}> Edit</MenuItem>\r\n                  <MenuItem onClick={handleClickDeletePost}> Delete </MenuItem>\r\n                </Menu>\r\n\r\n                <Button\r\n                  id=\"post-more-btn\"\r\n                  disableRipple\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                  startIcon={<MoreVertIcon />}\r\n                  onClick={handleOpenMoreOptions}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        <div ref={postContentRef} className=\"post-content\">\r\n          {props.postData.content}\r\n        </div>\r\n        <div className=\"post-footer\">\r\n          <div className=\"post-counters\">\r\n            <div\r\n              className=\"post-reaction-counter\"\r\n              hidden={props.postData.postCounters.reactionsCounter == 0}\r\n            >\r\n              <ThumbUpAltIcon\r\n                style={{\r\n                  height: \"18px\",\r\n                  position: \"relative\",\r\n                  bottom: \"-5px\",\r\n                }}\r\n                color={\"primary\"}\r\n              />\r\n              {props.postData.postCounters.reactionsCounter} Likes\r\n            </div>\r\n            <div\r\n              className=\"post-comment-counter\"\r\n              hidden={props.postData.postCounters.commentsCounter == 0}\r\n              onClick={handleToggleCommentsSection}\r\n            >\r\n              {props.postData.postCounters.commentsCounter} Comments\r\n            </div>\r\n          </div>\r\n          <div className=\"post-btns\">\r\n            <Button\r\n              onClick={handleToggleLike}\r\n              color={props.myReactionType ? \"primary\" : \"inherit\"}\r\n              startIcon={\r\n                props.myReactionType ? (\r\n                  <ThumbUpAltIcon color={\"primary\"} />\r\n                ) : (\r\n                  <ThumbUpOutlinedIcon color={\"inherit\"} />\r\n                )\r\n              }\r\n            >\r\n              Like\r\n            </Button>\r\n            <Button\r\n              onClick={handleToggleCommentsSection}\r\n              color={\"inherit\"}\r\n              startIcon={<CommentOutlinedIcon color=\"inherit\" />}\r\n            >\r\n              Comment\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <PostCommentsSections\r\n          identity={props.identity}\r\n          postAuthorData={props.postAuthorData}\r\n          postData={props.postData}\r\n          openCommentsSection={openCommentsSection}\r\n        />\r\n      </div>\r\n      <PostEditing\r\n        postIndex={props.postData.postIndex}\r\n        editingPost={editingPost}\r\n        setEditingPost={setEditingPost}\r\n        postContentRef={postContentRef}\r\n        handleEditPost={props.handleEditPost}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","E:\\sokial\\sokial\\src\\components\\postsProfileSection.js",["152"],"E:\\sokial\\sokial\\src\\components\\profileHeader.js",["153","154"],"E:\\sokial\\sokial\\src\\components\\mainBar.js",["155"],"import { NavLink } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Badge } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FriendshipNotificationsButton from \"./friendshipNotificationsButton\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst MainBar = (props) => {\r\n  if (props.identity == null) {\r\n    return (\r\n      <AppBar position=\"fixed\" id=\"main-bar\">\r\n        <Toolbar id=\"mainbar-notlogged-toolbar\">\r\n          <Typography variant=\"h6\">Sokial</Typography>\r\n          <div id=\"mainbar-notlogged-buttons\">\r\n            <Button color=\"inherit\">\r\n              <NavLink to=\"/login\" className=\"navlink-button\">\r\n                Login\r\n              </NavLink>\r\n            </Button>\r\n            <Button color=\"inherit\" href=\"/signup\" aria-current=\"page\">\r\n              <NavLink to=\"/Signup\" className=\"navlink-button\">\r\n                Signup\r\n              </NavLink>\r\n            </Button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  } else {\r\n    return (\r\n      <AppBar position=\"fixed\" id=\"main-bar\">\r\n        <Toolbar id=\"mainbar-logged-toolbar\">\r\n          <Typography variant=\"h6\">Sokial</Typography>\r\n\r\n          <NavLink to=\"/home\" className=\"navlink-button\">\r\n            <IconButton color=\"inherit\">\r\n              <HomeIcon />\r\n            </IconButton>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to={`/profile?id=${props.identity.id}`}\r\n            className=\"navlink-button\"\r\n          >\r\n            <IconButton color=\"inherit\">\r\n              <AccountCircleIcon />\r\n            </IconButton>\r\n          </NavLink>\r\n\r\n          <FriendshipNotificationsButton identity={props.identity} />\r\n          <Button id=\"\" color=\"inherit\" onClick={props.logout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MainBar;\r\n","E:\\sokial\\sokial\\src\\components\\FriendshipNotificationsButton.js",["156","157","158","159","160","161","162","163"],"E:\\sokial\\sokial\\src\\components\\friendshipNotificationsButton.js",["164","165","166","167","168","169"],"import { Component, createRef } from \"react\";\r\nimport {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport FriendshipNotifEntry from \"./friendshipNotifEntry\";\r\nimport NotificationsContainer from \"./notificationsContainer\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass FriendshipNotificationsButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDialog: false,\r\n\r\n      noMoreNotif: false,\r\n      fetchedNotif: [],\r\n      shownNotifDivs: [],\r\n    };\r\n\r\n    this.dialogRef = createRef(null);\r\n\r\n    this.numNotifToFetch = 15; // It's a parameter that can be changed\r\n    this.numNotifToPush = 5; // It's a parameter that can be changed\r\n\r\n    this.handleClickFriendshipNotif = this.handleClickFriendshipNotif.bind(\r\n      this\r\n    );\r\n    this.pushToShownNotif = this.pushToShownNotif.bind(this);\r\n    this.handleWaitingForNotif = this.handleWaitingForNotif.bind(this);\r\n    this.fetchNewNotif = this.fetchNewNotif.bind(this);\r\n  }\r\n\r\n  // Fetching Friendship Notifications\r\n  fetchNewNotif() {\r\n    const escapeNotif = this.state.fetchedNotif.length;\r\n    const limitNotif = this.numNotifToFetch;\r\n\r\n    console.log(`${escapeNotif} ${limitNotif}`);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `/friendship-request/requests?` +\r\n          new URLSearchParams({\r\n            asreceiver: true,\r\n            esc: escapeNotif,\r\n            limit: limitNotif,\r\n          }),\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          if (!res.valid) {\r\n            // TODO :: Handle invalid fetch\r\n          } else {\r\n            console.log(res.data);\r\n            return resolve(res.data);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleClickFriendshipNotif() {\r\n    this.setState({\r\n      openDialog: !this.state.openDialog,\r\n    });\r\n  }\r\n\r\n  pushToShownNotif() {\r\n    const tmpNotifDivs = [];\r\n\r\n    let toPushLeft = this.state.shownNotifDivs.length;\r\n    let toPushRight = Math.min(\r\n      toPushLeft + this.numNotifToPush,\r\n      this.state.fetchedNotif.length\r\n    );\r\n\r\n    for (let i = toPushLeft; i < toPushRight; i++)\r\n      tmpNotifDivs.push(\r\n        <FriendshipNotifEntry\r\n          id={this.state.fetchedNotif[i].id}\r\n          fullName={`${this.state.fetchedNotif[i].firstName} ${this.state.fetchedNotif[i].lastName}`}\r\n        />\r\n      );\r\n\r\n    this.setState({\r\n      shownNotifDivs: this.state.shownNotifDivs.concat(tmpNotifDivs),\r\n    });\r\n  }\r\n\r\n  handleWaitingForNotif() {\r\n    this.setState({ waitingForNotif: true });\r\n\r\n    if (this.state.fetchedNotif.length === this.state.shownNotifDivs.length) {\r\n      // Need to fetch new notif\r\n      this.fetchNewNotif().then((notif) => {\r\n        //console.log(\"Fetched notif >> \", notif);\r\n        if (notif.length === 0) {\r\n          this.setState({ noMoreNotif: true });\r\n        } else {\r\n          this.setState({\r\n            fetchedNotif: this.state.fetchedNotif.concat(notif),\r\n          });\r\n          this.pushToShownNotif();\r\n        }\r\n      });\r\n    } else {\r\n      this.pushToShownNotif();\r\n    }\r\n\r\n    this.fetching = false;\r\n    this.setState({ waitingForNotif: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleWaitingForNotif();\r\n  }\r\n\r\n  render() {\r\n    let endDiv = null;\r\n    if (this.state.noMoreNotif === false && this.state.waitingForNotif)\r\n      endDiv = (\r\n        <div id=\"notif-profile-section-loading-div\">\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    else if (this.state.noMoreNotif === false) {\r\n      endDiv = (\r\n        <div>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={this.handleWaitingForNotif}\r\n          >\r\n            Load more...\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"notifbtn-with-container\">\r\n        <IconButton color=\"inherit\" onClick={this.handleClickFriendshipNotif}>\r\n          <Badge\r\n            badgeContent={this.state.fetchedNotif.length}\r\n            color=\"secondary\"\r\n            variant=\"dot\"\r\n          >\r\n            <PersonAddIcon />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <Dialog\r\n          open={this.state.openDialog}\r\n          onClose={this.handleClickFriendshipNotif}\r\n        >\r\n          <div ref={this.dialogRef}></div>\r\n          <DialogTitle style={{ textAlign: \"center\" }}>\r\n            Friendship Notifications\r\n          </DialogTitle>\r\n          <DialogContent class=\"notif-container\">\r\n            {this.state.shownNotifDivs} {endDiv}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendshipNotificationsButton;\r\n","E:\\sokial\\sokial\\src\\components\\notificationsContainer.js",["170","171","172","173","174","175","176","177"],"import {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst NotificationsContainer = (props) => {};\r\n\r\nexport default NotificationsContainer;\r\n","E:\\sokial\\sokial\\src\\components\\friendshipNotifEntry.js",["178"],"import { Grid, Button, ButtonGroup, Container } from \"@material-ui/core\";\r\nimport { friendshipRelatedFunctions as frFuncs } from \"../usable functions/endpoint-related\";\r\n\r\nconst FriendshipNotifEntry = (props) => {\r\n  return (\r\n    <Grid direction=\"row\" className=\"friendship-notif-entry\" container>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <div class=\"friendship-notif-img\"></div>\r\n        <a\r\n          class=\"clickable-account-name friendship-notif-name\"\r\n          href={`${window.location.origin}/profile?id=${props.id}`}\r\n          style={{ marginLeft: \"4px\" }}\r\n        >\r\n          {props.fullName}\r\n        </a>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <ButtonGroup\r\n          size={\"small\"}\r\n          variant=\"contained\"\r\n          aria-label=\"contained primary button group\"\r\n        >\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              frFuncs.handleAcceptFriendship(props.id);\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              frFuncs.handleRejectFriendship(props.id);\r\n            }}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FriendshipNotifEntry;\r\n","E:\\sokial\\sokial\\src\\usable functions\\endpoint-related.js",[],"E:\\sokial\\sokial\\src\\components\\postCommentsSection.js",["179"],"E:\\sokial\\sokial\\src\\usable functions\\general.js",[],"E:\\sokial\\sokial\\src\\components\\postComment.js",["180","181"],"E:\\sokial\\sokial\\src\\components\\postEditing.js",["182","183"],"E:\\sokial\\sokial\\src\\components\\home.js",["184","185"],"import { useState, useEffect } from \"react\";\r\nimport PostsHomeSection from \"./postsHomeSection\";\r\nimport Posting from \"./posting\";\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>HOME</h1>\r\n      <Posting identity={props.identity} />\r\n      <PostsHomeSection identity={props.identity} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\sokial\\sokial\\src\\components\\postsHomeSection.js",[],"E:\\sokial\\sokial\\src\\components\\profileImg.js",["186","187","188","189","190","191","192","193","194","195"],"E:\\sokial\\sokial\\src\\components\\profilePostsOption.js",["196","197","198","199","200"],"E:\\sokial\\sokial\\src\\components\\profileFriendsOption.js",["201","202","203"],"import { Grid } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FriendEntryProfileFriendsOption from \"./friendEntryProfileFriendsOption.\";\r\n\r\nconst ProfileFriendsOption = ({ identity, profileData }) => {\r\n  const numToShow = 40;\r\n  const [noMoreFriends, setNoMoreFriedns] = useState(false);\r\n  const [waitingForMoreFriends, setWaitingForMoreFriends] = useState(true);\r\n  const [fetchedFriends, setFetchedFriends] = useState([]);\r\n  const [friendsDivs, setFriendsDivs] = useState([]);\r\n\r\n  const isNearToBottom = () => {\r\n    return (\r\n      document.body.getBoundingClientRect().bottom <= window.innerHeight * 5\r\n    );\r\n  };\r\n\r\n  const pushMoreFriendsToView = () => {\r\n    let leftPtr = friendsDivs.length;\r\n    let rightPtr = Math.min(fetchedFriends.length, leftPtr + numToShow);\r\n    let tmpArr = [];\r\n\r\n    for (let i = leftPtr; i < rightPtr; i++) {\r\n      tmpArr.push(\r\n        <FriendEntryProfileFriendsOption\r\n          friendData={{\r\n            id: fetchedFriends[i].id,\r\n            firstName: fetchedFriends[i].first_name,\r\n            lastName: fetchedFriends[i].last_name,\r\n            profileImgPath: fetchedFriends[i].profile_photo_path,\r\n          }}\r\n          identity={identity}\r\n          entryIndex={tmpArr.length + friendsDivs.length}\r\n        />\r\n      );\r\n    }\r\n\r\n    setWaitingForMoreFriends(false);\r\n    setFriendsDivs(friendsDivs.concat(tmpArr));\r\n  };\r\n\r\n  document.body.onscroll = () => {\r\n    console.log(\r\n      fetchedFriends.length,\r\n      \"wait: \",\r\n      waitingForMoreFriends,\r\n      noMoreFriends\r\n    );\r\n    if (!noMoreFriends && isNearToBottom() && !waitingForMoreFriends) {\r\n      setWaitingForMoreFriends(true);\r\n    }\r\n  };\r\n\r\n  // To fetch\r\n  useEffect(() => {\r\n    fetch(`/get-friends?friendsOfId=${profileData.id}`, { method: \"GET\" })\r\n      .then((res) => {\r\n        if (res.ok) return res.json();\r\n        else throw new Error(\"Can't fetch friends\");\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Friends\", res);\r\n        setFetchedFriends(res.friends);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR :: \", err.message);\r\n      });\r\n  }, []);\r\n\r\n  // See if all is done\r\n  useEffect(() => {\r\n    if (friendsDivs.length === fetchedFriends.length) {\r\n      setNoMoreFriedns(true);\r\n    }\r\n  }, [friendsDivs.length]);\r\n\r\n  // To take a safe space, if there is some news in the fetchedFriends array, then may be there is more.\r\n  useEffect(() => {\r\n    setNoMoreFriedns(false);\r\n  }, [fetchedFriends.length]);\r\n\r\n  //  If waiting, go and push more entries\r\n  useEffect(() => {\r\n    if (waitingForMoreFriends && !noMoreFriends) {\r\n      pushMoreFriendsToView();\r\n    }\r\n  }, [waitingForMoreFriends]);\r\n\r\n  return (\r\n    <Grid container id=\"profile-friends-option-friends-container\" spacing={1}>\r\n      {friendsDivs}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileFriendsOption;\r\n","E:\\sokial\\sokial\\src\\components\\friendEntryProfileFriendsOption..js",["204","205","206"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { Grid, Button, IconButton } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Avatar from \"./../images/default_profile_image.png\";\r\n\r\nconst FriendEntryProfileFriendsOption = ({\r\n  friendData,\r\n  entryIndex,\r\n  identity,\r\n}) => {\r\n  const [profileImg, setProfileImg] = useState(null);\r\n  const profileImgRef = useRef(null);\r\n\r\n  // Setting profile image\r\n  useEffect(() => {\r\n    if (profileImg && profileImgRef.current) {\r\n      profileImgRef.current.src = profileImg;\r\n    } else if (profileImgRef.current) {\r\n      profileImgRef.current.src = Avatar;\r\n    }\r\n  }, [profileImg, profileImgRef]);\r\n\r\n  // To fetch profile image\r\n  useEffect(() => {\r\n    if (entryIndex < 10) console.log(entryIndex);\r\n    if (friendData.profileImgPath)\r\n      // If the profile image path is not null\r\n      fetch(\r\n        `/get-profile-img/${friendData.id}?` +\r\n          new URLSearchParams({\r\n            profile_photo_path: friendData.profileImgPath,\r\n          })\r\n      )\r\n        .then((res) => {\r\n          if (res.ok) return res.blob();\r\n          else\r\n            throw new Error(\r\n              `Can't fetch profile image of the friend ${friendData.id}`\r\n            );\r\n        })\r\n        .then((img) => {\r\n          setProfileImg(URL.createObjectURL(img));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n  }, [friendData.profileImgPath]);\r\n\r\n  return (\r\n    <Grid item className=\"friend-entry\" xs={12} sm={6} lg={6}>\r\n      <div className=\"friend-entry-left-col\">\r\n        <a href={`${window.location.origin}/profile?id=${friendData.id}`}>\r\n          <img className=\"friend-entry-profile-img\" ref={profileImgRef} />\r\n        </a>\r\n\r\n        <a\r\n          className=\"friend-entry-profile-name clickable-account-name\"\r\n          href={`${window.location.origin}/profile?id=${friendData.id}`}\r\n        >\r\n          {`${friendData.firstName} ${friendData.lastName}`}\r\n        </a>\r\n      </div>\r\n\r\n      {identity.id !== friendData.id ? (\r\n        <IconButton>\r\n          <MoreHorizIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FriendEntryProfileFriendsOption;\r\n",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":17,"column":6,"nodeType":"217","endLine":17,"endColumn":8,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"216","line":36,"column":6,"nodeType":"217","endLine":36,"endColumn":8,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":193,"column":38,"nodeType":"222","messageId":"223","endLine":193,"endColumn":40},{"ruleId":"220","severity":1,"message":"221","line":194,"column":38,"nodeType":"222","messageId":"223","endLine":194,"endColumn":40},{"ruleId":"220","severity":1,"message":"221","line":214,"column":40,"nodeType":"222","messageId":"223","endLine":214,"endColumn":42},{"ruleId":"207","replacedBy":"224"},{"ruleId":"209","replacedBy":"225"},{"ruleId":"211","severity":1,"message":"226","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":18},{"ruleId":"211","severity":1,"message":"227","line":1,"column":20,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"227","line":1,"column":20,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"228","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":19},{"ruleId":"211","severity":1,"message":"229","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":37},{"ruleId":"211","severity":1,"message":"230","line":1,"column":39,"nodeType":"213","messageId":"214","endLine":1,"endColumn":43},{"ruleId":"211","severity":1,"message":"231","line":1,"column":45,"nodeType":"213","messageId":"214","endLine":1,"endColumn":51},{"ruleId":"211","severity":1,"message":"232","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":15},{"ruleId":"211","severity":1,"message":"233","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":27},{"ruleId":"215","severity":1,"message":"234","line":66,"column":6,"nodeType":"217","endLine":66,"endColumn":24,"suggestions":"235"},{"ruleId":"215","severity":1,"message":"236","line":66,"column":7,"nodeType":"237","endLine":66,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":68,"column":40,"nodeType":"222","messageId":"223","endLine":68,"endColumn":42},{"ruleId":"220","severity":1,"message":"221","line":90,"column":30,"nodeType":"222","messageId":"223","endLine":90,"endColumn":32},{"ruleId":"220","severity":1,"message":"221","line":96,"column":33,"nodeType":"222","messageId":"223","endLine":96,"endColumn":35},{"ruleId":"215","severity":1,"message":"238","line":30,"column":6,"nodeType":"217","endLine":30,"endColumn":66,"suggestions":"239"},{"ruleId":"220","severity":1,"message":"221","line":93,"column":48,"nodeType":"222","messageId":"223","endLine":93,"endColumn":50},{"ruleId":"240","severity":1,"message":"241","line":97,"column":9,"nodeType":"242","endLine":100,"endColumn":10},{"ruleId":"220","severity":1,"message":"221","line":119,"column":52,"nodeType":"222","messageId":"223","endLine":119,"endColumn":54},{"ruleId":"211","severity":1,"message":"243","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":13},{"ruleId":"215","severity":1,"message":"244","line":54,"column":6,"nodeType":"217","endLine":58,"endColumn":4,"suggestions":"245"},{"ruleId":"240","severity":1,"message":"241","line":91,"column":15,"nodeType":"242","endLine":91,"endColumn":79},{"ruleId":"220","severity":1,"message":"221","line":99,"column":32,"nodeType":"222","messageId":"223","endLine":99,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":130,"column":68,"nodeType":"222","messageId":"223","endLine":130,"endColumn":70},{"ruleId":"220","severity":1,"message":"221","line":144,"column":67,"nodeType":"222","messageId":"223","endLine":144,"endColumn":69},{"ruleId":"246","severity":1,"message":"247","line":70,"column":47,"nodeType":"248","messageId":"249","endLine":70,"endColumn":49},{"ruleId":"211","severity":1,"message":"226","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":18},{"ruleId":"211","severity":1,"message":"250","line":1,"column":20,"nodeType":"213","messageId":"214","endLine":1,"endColumn":29},{"ruleId":"211","severity":1,"message":"251","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":15},{"ruleId":"211","severity":1,"message":"252","line":3,"column":3,"nodeType":"213","messageId":"214","endLine":3,"endColumn":9},{"ruleId":"211","severity":1,"message":"253","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":10},{"ruleId":"211","severity":1,"message":"254","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":13},{"ruleId":"211","severity":1,"message":"231","line":7,"column":3,"nodeType":"213","messageId":"214","endLine":7,"endColumn":9},{"ruleId":"211","severity":1,"message":"255","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":25},{"ruleId":"211","severity":1,"message":"256","line":15,"column":7,"nodeType":"213","messageId":"214","endLine":15,"endColumn":36},{"ruleId":"211","severity":1,"message":"257","line":16,"column":16,"nodeType":"213","messageId":"214","endLine":16,"endColumn":23},{"ruleId":"258","severity":2,"message":"259","line":31,"column":16,"nodeType":"213","messageId":"260","endLine":31,"endColumn":45},{"ruleId":"211","severity":1,"message":"228","line":3,"column":3,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"211","severity":1,"message":"229","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":19},{"ruleId":"211","severity":1,"message":"230","line":5,"column":3,"nodeType":"213","messageId":"214","endLine":5,"endColumn":7},{"ruleId":"211","severity":1,"message":"261","line":10,"column":3,"nodeType":"213","messageId":"214","endLine":10,"endColumn":16},{"ruleId":"211","severity":1,"message":"262","line":15,"column":8,"nodeType":"213","messageId":"214","endLine":15,"endColumn":30},{"ruleId":"211","severity":1,"message":"255","line":16,"column":8,"nodeType":"213","messageId":"214","endLine":16,"endColumn":25},{"ruleId":"211","severity":1,"message":"228","line":2,"column":3,"nodeType":"213","messageId":"214","endLine":2,"endColumn":12},{"ruleId":"211","severity":1,"message":"229","line":3,"column":3,"nodeType":"213","messageId":"214","endLine":3,"endColumn":19},{"ruleId":"211","severity":1,"message":"230","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":7},{"ruleId":"211","severity":1,"message":"231","line":5,"column":3,"nodeType":"213","messageId":"214","endLine":5,"endColumn":9},{"ruleId":"211","severity":1,"message":"263","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":9},{"ruleId":"211","severity":1,"message":"264","line":7,"column":3,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"265","line":8,"column":3,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"211","severity":1,"message":"261","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":16},{"ruleId":"211","severity":1,"message":"266","line":1,"column":37,"nodeType":"213","messageId":"214","endLine":1,"endColumn":46},{"ruleId":"211","severity":1,"message":"228","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":19},{"ruleId":"215","severity":1,"message":"267","line":40,"column":6,"nodeType":"217","endLine":40,"endColumn":8,"suggestions":"268"},{"ruleId":"240","severity":1,"message":"241","line":87,"column":9,"nodeType":"242","endLine":87,"endColumn":71},{"ruleId":"211","severity":1,"message":"269","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":46,"column":50,"nodeType":"222","messageId":"223","endLine":46,"endColumn":52},{"ruleId":"211","severity":1,"message":"226","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":18},{"ruleId":"211","severity":1,"message":"250","line":1,"column":20,"nodeType":"213","messageId":"214","endLine":1,"endColumn":29},{"ruleId":"211","severity":1,"message":"228","line":3,"column":3,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"211","severity":1,"message":"229","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":19},{"ruleId":"211","severity":1,"message":"230","line":5,"column":3,"nodeType":"213","messageId":"214","endLine":5,"endColumn":7},{"ruleId":"211","severity":1,"message":"231","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":9},{"ruleId":"211","severity":1,"message":"270","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":21},{"ruleId":"211","severity":1,"message":"271","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":24},{"ruleId":"211","severity":1,"message":"272","line":14,"column":10,"nodeType":"213","messageId":"214","endLine":14,"endColumn":36},{"ruleId":"211","severity":1,"message":"273","line":18,"column":24,"nodeType":"213","messageId":"214","endLine":18,"endColumn":39},{"ruleId":"215","severity":1,"message":"274","line":33,"column":6,"nodeType":"217","endLine":33,"endColumn":76,"suggestions":"275"},{"ruleId":"240","severity":1,"message":"241","line":76,"column":9,"nodeType":"242","endLine":76,"endColumn":54},{"ruleId":"211","severity":1,"message":"228","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":19},{"ruleId":"211","severity":1,"message":"229","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":37},{"ruleId":"211","severity":1,"message":"231","line":1,"column":45,"nodeType":"213","messageId":"214","endLine":1,"endColumn":51},{"ruleId":"211","severity":1,"message":"226","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":18},{"ruleId":"211","severity":1,"message":"250","line":3,"column":20,"nodeType":"213","messageId":"214","endLine":3,"endColumn":29},{"ruleId":"215","severity":1,"message":"276","line":68,"column":6,"nodeType":"217","endLine":68,"endColumn":8,"suggestions":"277"},{"ruleId":"215","severity":1,"message":"278","line":75,"column":6,"nodeType":"217","endLine":75,"endColumn":26,"suggestions":"279"},{"ruleId":"215","severity":1,"message":"280","line":87,"column":6,"nodeType":"217","endLine":87,"endColumn":29,"suggestions":"281"},{"ruleId":"211","severity":1,"message":"231","line":2,"column":16,"nodeType":"213","messageId":"214","endLine":2,"endColumn":22},{"ruleId":"215","severity":1,"message":"282","line":47,"column":6,"nodeType":"217","endLine":47,"endColumn":33,"suggestions":"283"},{"ruleId":"240","severity":1,"message":"241","line":53,"column":11,"nodeType":"242","endLine":53,"endColumn":75},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'swap' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array. If 'setForMount' needs the current value of 'props.name', you can also switch to useReducer instead of useState and read 'props.name' in the reducer.","ArrayExpression",["286"],["287"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["284"],["285"],"'useState' is defined but never used.","'useRef' is defined but never used.","'TextField' is defined but never used.","'TextareaAutosize' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'Posting' is defined but never used.","'PostsProfileSection' is defined but never used.","React Hook useEffect has missing dependencies: 'isMyProfile' and 'params'. Either include them or remove the dependency array.",["288"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["289"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'set' is defined but never used.","React Hook useEffect has a missing dependency: 'props.postAuthorData'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["290"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'Badge' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'NotificationsIcon' is defined but never used.","'FriendshipNotificationsButton' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-undef","'friendshipNotificationsButton' is not defined.","undef","'DialogActions' is defined but never used.","'NotificationsContainer' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'props.commentAuthorData.id' and 'props.commentAuthorData.profileImagePath'. Either include them or remove the dependency array.",["291"],"'generalFunctions' is defined but never used.","'AddCircleIcon' is defined but never used.","'RemoveCircleIcon' is defined but never used.","'friendshipRelatedFunctions' is defined but never used.","'setFetchedImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.profileData.profile_image_path'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["292"],"React Hook useEffect has a missing dependency: 'profileData.id'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'fetchedFriends.length'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'noMoreFriends' and 'pushMoreFriendsToView'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: 'entryIndex' and 'friendData.id'. Either include them or remove the dependency array.",["296"],"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"297","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},"Update the dependencies array to be: [props.name]",{"range":"318","text":"319"},{"range":"320","text":"319"},"Update the dependencies array to be: [isMyProfile, params]",{"range":"321","text":"322"},"Update the dependencies array to be: [identity, postingAuthorProfileImgRef]",{"range":"323","text":"324"},"Update the dependencies array to be: [authorProfileImgRef, props.postAuthorData, props.postAuthorData.profileImage]",{"range":"325","text":"326"},"Update the dependencies array to be: [props.commentAuthorData.id, props.commentAuthorData.profileImagePath]",{"range":"327","text":"328"},"Update the dependencies array to be: [props.profileData.profileImage, props.profileData.profile_image_path, uploadedImgRef]",{"range":"329","text":"330"},"Update the dependencies array to be: [profileData.id]",{"range":"331","text":"332"},"Update the dependencies array to be: [fetchedFriends.length, friendsDivs.length]",{"range":"333","text":"334"},"Update the dependencies array to be: [noMoreFriends, pushMoreFriendsToView, waitingForMoreFriends]",{"range":"335","text":"336"},"Update the dependencies array to be: [entryIndex, friendData.id, friendData.profileImgPath]",{"range":"337","text":"338"},[608,610],"[props.name]",[1091,1093],[2161,2179],"[isMyProfile, params]",[845,905],"[identity, postingAuthorProfileImgRef]",[1582,1681],"[authorProfileImgRef, props.postAuthorData, props.postAuthorData.profileImage]",[1249,1251],"[props.commentAuthorData.id, props.commentAuthorData.profileImagePath]",[1185,1255],"[props.profileData.profileImage, props.profileData.profile_image_path, uploadedImgRef]",[2145,2147],"[profileData.id]",[2299,2319],"[fetchedFriends.length, friendsDivs.length]",[2677,2700],"[noMoreFriends, pushMoreFriendsToView, waitingForMoreFriends]",[1455,1482],"[entryIndex, friendData.id, friendData.profileImgPath]"]