[{"E:\\sokial\\sokial\\src\\index.js":"1","E:\\sokial\\sokial\\src\\App.js":"2","E:\\sokial\\sokial\\src\\reportWebVitals.js":"3","E:\\sokial\\sokial\\src\\components\\signup.js":"4","E:\\sokial\\sokial\\src\\components\\login.js":"5","E:\\sokial\\sokial\\src\\components\\profile.js":"6","E:\\sokial\\sokial\\src\\components\\posting.js":"7","E:\\sokial\\sokial\\src\\components\\post.js":"8","E:\\sokial\\sokial\\src\\components\\postsProfileSection.js":"9","E:\\sokial\\sokial\\src\\components\\profileHeader.js":"10","E:\\sokial\\sokial\\src\\components\\mainBar.js":"11","E:\\sokial\\sokial\\src\\components\\FriendshipNotificationsButton.js":"12","E:\\sokial\\sokial\\src\\components\\friendshipNotificationsButton.js":"13","E:\\sokial\\sokial\\src\\components\\notificationsContainer.js":"14","E:\\sokial\\sokial\\src\\components\\friendshipNotifEntry.js":"15","E:\\sokial\\sokial\\src\\usable functions\\endpoint-related.js":"16","E:\\sokial\\sokial\\src\\components\\postCommentsSection.js":"17","E:\\sokial\\sokial\\src\\usable functions\\general.js":"18","E:\\sokial\\sokial\\src\\components\\postComment.js":"19","E:\\sokial\\sokial\\src\\components\\postEditing.js":"20"},{"size":231,"mtime":1611459015441,"results":"21","hashOfConfig":"22"},{"size":3383,"mtime":1611742446816,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":11531,"mtime":1611632160414,"results":"25","hashOfConfig":"22"},{"size":3163,"mtime":1611570261559,"results":"26","hashOfConfig":"22"},{"size":3403,"mtime":1612245118847,"results":"27","hashOfConfig":"22"},{"size":2827,"mtime":1612255784722,"results":"28","hashOfConfig":"22"},{"size":3580,"mtime":1612255897946,"results":"29","hashOfConfig":"22"},{"size":7211,"mtime":1612256604814,"results":"30","hashOfConfig":"22"},{"size":2613,"mtime":1612245274635,"results":"31","hashOfConfig":"22"},{"size":1534,"mtime":1611910582377,"results":"32","hashOfConfig":"22"},{"size":884,"mtime":1611910578522,"results":"33","hashOfConfig":"22"},{"size":4922,"mtime":1612015943120,"results":"34","hashOfConfig":"22"},{"size":248,"mtime":1611924095031,"results":"35","hashOfConfig":"22"},{"size":1279,"mtime":1612014911088,"results":"36","hashOfConfig":"22"},{"size":1375,"mtime":1611999343698,"results":"37","hashOfConfig":"22"},{"size":8343,"mtime":1612246447966,"results":"38","hashOfConfig":"22"},{"size":261,"mtime":1612055288154,"results":"39","hashOfConfig":"22"},{"size":3510,"mtime":1612246381464,"results":"40","hashOfConfig":"22"},{"size":2051,"mtime":1612256386286,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f5302e",{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\sokial\\sokial\\src\\index.js",[],["91","92"],"E:\\sokial\\sokial\\src\\App.js",["93","94","95","96","97","98","99","100","101","102"],"import \"./App.scss\";\r\nimport Signup from \"./components/signup\";\r\nimport Login from \"./components/login\";\r\nimport { Link, Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Profile from \"./components/profile\";\r\nimport Posting from \"./components/posting\";\r\nimport Post from \"./components/post\";\r\nimport MainBar from \"./components/mainBar\";\r\nimport { useState, Component } from \"react\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst Sokial = (props) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          path=\"/profile\"\r\n          component={() => <Profile identity={props.identity} />}\r\n        />\r\n        <Route path=\"/posting\" component={Posting} />\r\n        <Route path=\"/post\" component={Post} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  /* return (\r\n    <>\r\n      <button\r\n        onClick={async () => {\r\n          await fetch(\"/logout\", {\r\n            method: \"post\",\r\n          });\r\n          props.loggedOut();\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n      <br />\r\n      <h3>\r\n        Welcome to home, {props.identity.firstName} {props.identity.lastName}\r\n      </h3>\r\n    </>\r\n  ); */\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gotUserData = this.gotUserData.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n\r\n    this.state = {\r\n      identity: null,\r\n      authChecked: false,\r\n    };\r\n  }\r\n\r\n  gotUserData(data) {\r\n    this.setState({ identity: data });\r\n    window.location.replace(\"/home\");\r\n  }\r\n  async handleLogout() {\r\n    await fetch(\"/logout\", {\r\n      method: \"post\",\r\n    });\r\n\r\n    window.location.replace(\"/login\");\r\n    this.setState({ identity: null });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await fetch(\"/about-auth\", { method: \"GET\" });\r\n    res = await res.json();\r\n\r\n    if (res.auth) {\r\n      if (\r\n        window.location.pathname == \"/login\" ||\r\n        window.location.pathname == \"/signup\"\r\n      )\r\n        window.location.replace(\"/home\");\r\n      this.setState({ identity: res.userData });\r\n    } else {\r\n      if (window.location.pathname == \"/home\")\r\n        window.location.replace(\"/login\");\r\n    }\r\n\r\n    this.setState({ authChecked: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.authChecked)\r\n      return (\r\n        <Router>\r\n          <MainBar logout={this.handleLogout} identity={this.state.identity} />\r\n\r\n          <Switch>\r\n            <Route\r\n              path=\"/login\"\r\n              component={() => <Login gotUserData={this.gotUserData} />}\r\n            />\r\n            <Route\r\n              path=\"/signup\"\r\n              component={() => <Signup gotUserData={this.gotUserData} />}\r\n            />\r\n\r\n            <Route\r\n              path=\"/*\"\r\n              component={() => (\r\n                <Sokial\r\n                  logout={this.handleLogout}\r\n                  identity={this.state.identity}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/home\"\r\n              component={() => (\r\n                <Sokial\r\n                  loggedOut={this.handleLogout}\r\n                  identity={this.state.identity}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\nexport default App;\r\n","E:\\sokial\\sokial\\src\\reportWebVitals.js",[],["103","104"],"E:\\sokial\\sokial\\src\\components\\signup.js",["105","106"],"import { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\n/*\r\nTODO :: Show and handle invalidation of account creation\r\n*/\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { countries } from \"../data-stores/login and signup.json\";\r\n\r\nconst maxNameLen = 20,\r\n  minNameLen = 2,\r\n  maxPassLen = 20,\r\n  minPassLen = 6,\r\n  maxCityLen = 20,\r\n  minCityLen = 2;\r\n\r\nconst validationSchema = yup.object({\r\n  fname: yup\r\n    .string()\r\n    .min(\r\n      minNameLen,\r\n      `First name should be of minimum ${minNameLen} characters length`\r\n    )\r\n    .max(\r\n      maxNameLen,\r\n      `First name should be of maximum ${maxNameLen} characters length`\r\n    )\r\n    .required(\"First name is required\"),\r\n\r\n  lname: yup\r\n    .string()\r\n    .min(\r\n      minNameLen,\r\n      `Last name should be of minimum ${minNameLen} characters length`\r\n    )\r\n    .max(\r\n      maxNameLen,\r\n      `Last name should be of maximum ${maxNameLen} characters length`\r\n    )\r\n    .required(\"Last name is required\"),\r\n\r\n  email: yup\r\n    .string()\r\n    .email(\"This email is invalid\")\r\n    .required(\"Email is required\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      minPassLen,\r\n      `Password should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxPassLen,\r\n      `Password should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"Password is required\"),\r\n\r\n  gender: yup.string().required(\"Gender is required\"),\r\n\r\n  birthday: yup.string().required(\"Birth day is required\"),\r\n  birthmonth: yup.string().required(\"Birth month is required\"),\r\n  birthyear: yup.string().required(\"Birth year is required\"),\r\n\r\n  country: yup.string().required(\"Country is required\"),\r\n  city: yup\r\n    .string()\r\n    .min(\r\n      minCityLen,\r\n      `City should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxCityLen,\r\n      `City should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"City is required\"),\r\n});\r\n\r\nconst Birthdate = (props) => {\r\n  const minPossibleYear = 1900;\r\n  const date = new Date();\r\n\r\n  const years = [],\r\n    days = Array.from(Array(31).keys()).map((x) => {\r\n      return { label: String(x + 1), value: x + 1 };\r\n    }),\r\n    monthes = Array.from(Array(12).keys()).map((x) => {\r\n      return { label: String(x + 1), value: x + 1 };\r\n    });\r\n  for (let i = date.getFullYear(); i >= minPossibleYear; i--)\r\n    years.push({\r\n      label: String(i),\r\n      value: i,\r\n    });\r\n\r\n  return (\r\n    <FormControl>\r\n      <Autocomplete\r\n        id=\"birthday\"\r\n        name=\"birthday\"\r\n        style={{ width: 300 }}\r\n        options={days}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthday &&\r\n                Boolean(props.formik.errors.birthday)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthday && props.formik.errors.birthday\r\n              }\r\n              {...params}\r\n              label=\"Day of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newday) => {\r\n          if (newday) props.formik.values.birthday = newday.value;\r\n          else props.formik.values.birthday = \"\";\r\n          await props.formik.handleChange(\"birthday\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthday && Boolean(props.formik.errors.birthday)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthday && props.formik.errors.birthday\r\n        }\r\n      />\r\n      <Autocomplete\r\n        id=\"birthmonth\"\r\n        name=\"birthmonth\"\r\n        style={{ width: 300 }}\r\n        options={monthes}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthmonth &&\r\n                Boolean(props.formik.errors.birthmonth)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthmonth &&\r\n                props.formik.errors.birthmonth\r\n              }\r\n              {...params}\r\n              label=\"Month of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newmonth) => {\r\n          if (newmonth) props.formik.values.birthmonth = newmonth.value;\r\n          else props.formik.values.birthmonth = \"\";\r\n          await props.formik.handleChange(\"birthmonth\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthmonth &&\r\n          Boolean(props.formik.errors.birthmonth)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthmonth && props.formik.errors.birthmonth\r\n        }\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"birthyear\"\r\n        name=\"birthyear\"\r\n        style={{ width: 300 }}\r\n        options={years}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthyear &&\r\n                Boolean(props.formik.errors.birthyear)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthyear && props.formik.errors.birthyear\r\n              }\r\n              {...params}\r\n              label=\"Year of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newyear) => {\r\n          if (newyear) props.formik.values.birthyear = newyear.value;\r\n          else props.formik.values.birthyear = \"\";\r\n          await props.formik.handleChange(\"birthyear\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthyear &&\r\n          Boolean(props.formik.errors.birthyear)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthyear && props.formik.errors.birthyear\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Signup = (props) => {\r\n  // Redirection to 'home' is a token recognised\r\n  if (document.cookie.indexOf(\"; token\") > -1) {\r\n    window.location.replace(\"/home\");\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      birthday: \"\",\r\n      birthmonth: \"\",\r\n      birthyear: \"\",\r\n      gender: \"\",\r\n      country: \"\",\r\n      city: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      const user = {\r\n        fName: values.fname,\r\n        lName: values.lname,\r\n        email: values.email,\r\n        password: values.password,\r\n        country: values.country,\r\n        city: values.city,\r\n        gender: values.gender,\r\n        dob: values.birthyear + \"-\" + values.birthmonth + \"-\" + values.birthday,\r\n      };\r\n\r\n      try {\r\n        const res = await fetch(\"/signup\", {\r\n          method: \"post\",\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const resJson = await res.json();\r\n        if (!resJson.valid) {\r\n          console.log(resJson.message);\r\n        } else {\r\n          // valid request\r\n          props.gotUserData(resJson.userData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <FormControl>\r\n        <TextField\r\n          id=\"in-txt-fname\"\r\n          name=\"fname\"\r\n          label=\"First Name\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.fname && Boolean(formik.errors.fname)}\r\n          helperText={formik.touched.fname && formik.errors.fname}\r\n        />\r\n        <TextField\r\n          id=\"in-txt-lname\"\r\n          name=\"lname\"\r\n          label=\"Last Name\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.lname && Boolean(formik.errors.lname)}\r\n          helperText={formik.touched.lname && formik.errors.lname}\r\n        />\r\n        <TextField\r\n          id=\"in-txt-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n\r\n        <FormControl\r\n          component=\"fieldset\"\r\n          error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n          helperText={formik.touched.gender && formik.errors.gender}\r\n        >\r\n          <RadioGroup name=\"gender\" row onChange={formik.handleChange}>\r\n            <FormControlLabel\r\n              value=\"m\"\r\n              control={<Radio />}\r\n              label=\"Male\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"f\"\r\n              control={<Radio />}\r\n              label=\"Female\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <FormHelperText\r\n              disabled={formik.touched.gender && Boolean(formik.errors.gender)}\r\n            >\r\n              {formik.errors.gender}\r\n            </FormHelperText>\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Birthdate formik={formik} />\r\n\r\n        <Autocomplete\r\n          id=\"country\"\r\n          style={{ width: 300 }}\r\n          name=\"country\"\r\n          options={countries}\r\n          autoHighlight\r\n          getOptionLabel={(option) => option.label}\r\n          renderInput={(params) => {\r\n            return (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a country\"\r\n                variant=\"outlined\"\r\n                error={formik.touched.country && Boolean(formik.errors.country)}\r\n                helperText={formik.touched.country && formik.errors.country}\r\n              />\r\n            );\r\n          }}\r\n          onChange={(e, newcountry) => {\r\n            if (newcountry) formik.values.country = newcountry.code;\r\n            else formik.values.country = \"\";\r\n            formik.handleChange(\"country\");\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"city\"\r\n          name=\"city\"\r\n          label=\"City\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.city && Boolean(formik.errors.city)}\r\n          helperText={formik.touched.city && formik.errors.city}\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          SignUp\r\n        </Button>\r\n        <small>\r\n          <span style={{ color: \"gray\" }}>already have an account? </span>\r\n          <a href=\"\\login\">login</a>\r\n        </small>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\sokial\\sokial\\src\\components\\login.js",["107"],"import { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst maxPassLen = 20,\r\n  minPassLen = 6;\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"This email is invalid\")\r\n    .required(\"Email is required\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      minPassLen,\r\n      `Password should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxPassLen,\r\n      `Password should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Login = (props) => {\r\n  // Redirection to 'home' is a token recognised\r\n  /*if (document.cookie.indexOf(\"; token\") > -1) {\r\n    window.location.replace(\"/home\");\r\n    // TODO :: Get a way to enforce not show Login component\r\n  }*/\r\n\r\n  const [loginError, setLoginError] = useState(null);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      const user = {\r\n        email: values.email,\r\n        password: values.password,\r\n      };\r\n\r\n      try {\r\n        const res = await fetch(\"/login\", {\r\n          method: \"post\",\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const resJson = await res.json();\r\n        if (!resJson.valid) {\r\n          setLoginError({ message: resJson.message });\r\n          console.log(resJson.message);\r\n        } else {\r\n          // valid request\r\n          props.gotUserData(resJson.userData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form id=\"login-form\" onSubmit={formik.handleSubmit}>\r\n      <FormControl error={loginError}>\r\n        <FormHelperText disabled={loginError}>\r\n          {loginError && loginError.message}\r\n        </FormHelperText>\r\n        <TextField\r\n          id=\"in-txt-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n        <small>\r\n          <span style={{ color: \"gray\" }}>want to create an account? </span>\r\n          <a href=\"\\signup\">signup</a>\r\n        </small>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\sokial\\sokial\\src\\components\\profile.js",["108","109","110","111","112"],"E:\\sokial\\sokial\\src\\components\\posting.js",["113"],"E:\\sokial\\sokial\\src\\components\\post.js",["114","115","116"],"E:\\sokial\\sokial\\src\\components\\postsProfileSection.js",[],"E:\\sokial\\sokial\\src\\components\\profileHeader.js",["117","118","119"],"E:\\sokial\\sokial\\src\\components\\mainBar.js",["120","121","122","123"],"import { NavLink } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Badge } from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport FriendshipNotificationsButton from \"./friendshipNotificationsButton\";\r\n\r\nconst MainBar = (props) => {\r\n  if (props.identity == null) {\r\n    return (\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar id=\"mainbar-notlogged-toolbar\">\r\n          <Typography variant=\"h6\">Sokial</Typography>\r\n          <div id=\"mainbar-notlogged-buttons\">\r\n            <Button color=\"inherit\">\r\n              <NavLink to=\"/login\" className=\"navlink-button\">\r\n                Login\r\n              </NavLink>\r\n            </Button>\r\n            <Button color=\"inherit\" href=\"/signup\" aria-current=\"page\">\r\n              <NavLink to=\"/Signup\" className=\"navlink-button\">\r\n                Signup\r\n              </NavLink>\r\n            </Button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  } else {\r\n    return (\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar id=\"mainbar-logged-toolbar\">\r\n          <Typography variant=\"h6\">Sokial</Typography>\r\n\r\n          <FriendshipNotificationsButton identity={props.identity} />\r\n\r\n          <Button id=\"\" color=\"inherit\" onClick={props.logout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MainBar;\r\n","E:\\sokial\\sokial\\src\\components\\FriendshipNotificationsButton.js",["124","125","126","127","128","129","130","131"],"E:\\sokial\\sokial\\src\\components\\friendshipNotificationsButton.js",["132","133","134","135","136","137"],"import { Component, createRef } from \"react\";\r\nimport {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport FriendshipNotifEntry from \"./friendshipNotifEntry\";\r\nimport NotificationsContainer from \"./notificationsContainer\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass FriendshipNotificationsButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDialog: false,\r\n\r\n      noMoreNotif: false,\r\n      fetchedNotif: [],\r\n      shownNotifDivs: [],\r\n    };\r\n\r\n    this.dialogRef = createRef(null);\r\n\r\n    this.numNotifToFetch = 15; // It's a parameter that can be changed\r\n    this.numNotifToPush = 5; // It's a parameter that can be changed\r\n\r\n    this.handleClickFriendshipNotif = this.handleClickFriendshipNotif.bind(\r\n      this\r\n    );\r\n    this.pushToShownNotif = this.pushToShownNotif.bind(this);\r\n    this.handleWaitingForNotif = this.handleWaitingForNotif.bind(this);\r\n    this.fetchNewNotif = this.fetchNewNotif.bind(this);\r\n  }\r\n\r\n  // Fetching Friendship Notifications\r\n  fetchNewNotif() {\r\n    const escapeNotif = this.state.fetchedNotif.length;\r\n    const limitNotif = this.numNotifToFetch;\r\n\r\n    console.log(`${escapeNotif} ${limitNotif}`);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `/friendship-request/requests?` +\r\n          new URLSearchParams({\r\n            asreceiver: true,\r\n            esc: escapeNotif,\r\n            limit: limitNotif,\r\n          }),\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          if (!res.valid) {\r\n            // TODO :: Handle invalid fetch\r\n          } else {\r\n            console.log(res.data);\r\n            return resolve(res.data);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleClickFriendshipNotif() {\r\n    this.setState({\r\n      openDialog: !this.state.openDialog,\r\n    });\r\n  }\r\n\r\n  pushToShownNotif() {\r\n    const tmpNotifDivs = [];\r\n\r\n    let toPushLeft = this.state.shownNotifDivs.length;\r\n    let toPushRight = Math.min(\r\n      toPushLeft + this.numNotifToPush,\r\n      this.state.fetchedNotif.length\r\n    );\r\n\r\n    for (let i = toPushLeft; i < toPushRight; i++)\r\n      tmpNotifDivs.push(\r\n        <FriendshipNotifEntry\r\n          id={this.state.fetchedNotif[i].id}\r\n          fullName={`${this.state.fetchedNotif[i].firstName} ${this.state.fetchedNotif[i].lastName}`}\r\n        />\r\n      );\r\n\r\n    this.setState({\r\n      shownNotifDivs: this.state.shownNotifDivs.concat(tmpNotifDivs),\r\n    });\r\n  }\r\n\r\n  handleWaitingForNotif() {\r\n    this.setState({ waitingForNotif: true });\r\n\r\n    if (this.state.fetchedNotif.length === this.state.shownNotifDivs.length) {\r\n      // Need to fetch new notif\r\n      this.fetchNewNotif().then((notif) => {\r\n        //console.log(\"Fetched notif >> \", notif);\r\n        if (notif.length === 0) {\r\n          this.setState({ noMoreNotif: true });\r\n        } else {\r\n          this.setState({\r\n            fetchedNotif: this.state.fetchedNotif.concat(notif),\r\n          });\r\n          this.pushToShownNotif();\r\n        }\r\n      });\r\n    } else {\r\n      this.pushToShownNotif();\r\n    }\r\n\r\n    this.fetching = false;\r\n    this.setState({ waitingForNotif: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleWaitingForNotif();\r\n  }\r\n\r\n  render() {\r\n    let endDiv = null;\r\n    if (this.state.noMoreNotif === false && this.state.waitingForNotif)\r\n      endDiv = (\r\n        <div id=\"notif-profile-section-loading-div\">\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    else if (this.state.noMoreNotif === false) {\r\n      endDiv = (\r\n        <div>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={this.handleWaitingForNotif}\r\n          >\r\n            Load more...\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"notifbtn-with-container\">\r\n        <IconButton color=\"inherit\" onClick={this.handleClickFriendshipNotif}>\r\n          <Badge badgeContent={3} color=\"secondary\" variant=\"dot\">\r\n            <PersonAddIcon />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <Dialog\r\n          open={this.state.openDialog}\r\n          onClose={this.handleClickFriendshipNotif}\r\n        >\r\n          <div ref={this.dialogRef}></div>\r\n          <DialogTitle style={{ textAlign: \"center\" }}>\r\n            Friendship Notifications\r\n          </DialogTitle>\r\n          <DialogContent class=\"notif-container\">\r\n            {this.state.shownNotifDivs} {endDiv}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendshipNotificationsButton;\r\n","E:\\sokial\\sokial\\src\\components\\notificationsContainer.js",["138","139","140","141","142","143","144","145"],"import {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst NotificationsContainer = (props) => {};\r\n\r\nexport default NotificationsContainer;\r\n","E:\\sokial\\sokial\\src\\components\\friendshipNotifEntry.js",["146"],"import { Grid, Button, ButtonGroup, Container } from \"@material-ui/core\";\r\nimport { friendshipRelatedFunctions as frFuncs } from \"../usable functions/endpoint-related\";\r\n\r\nconst FriendshipNotifEntry = (props) => {\r\n  return (\r\n    <Grid direction=\"row\" className=\"friendship-notif-entry\" container>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <div class=\"friendship-notif-img\"></div>\r\n        <div class=\"friendship-notif-name\" style={{ marginLeft: \"4px\" }}>\r\n          {props.fullName}\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <ButtonGroup\r\n          size={\"small\"}\r\n          variant=\"contained\"\r\n          aria-label=\"contained primary button group\"\r\n        >\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              frFuncs.handleAcceptFriendship(props.id);\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              frFuncs.handleRejectFriendship(props.id);\r\n            }}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FriendshipNotifEntry;\r\n","E:\\sokial\\sokial\\src\\usable functions\\endpoint-related.js",[],"E:\\sokial\\sokial\\src\\components\\postCommentsSection.js",["147"],"E:\\sokial\\sokial\\src\\usable functions\\general.js",[],"E:\\sokial\\sokial\\src\\components\\postComment.js",[],"E:\\sokial\\sokial\\src\\components\\postEditing.js",["148","149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":14},{"ruleId":"154","severity":1,"message":"158","line":9,"column":10,"nodeType":"156","messageId":"157","endLine":9,"endColumn":18},{"ruleId":"154","severity":1,"message":"159","line":12,"column":3,"nodeType":"156","messageId":"157","endLine":12,"endColumn":9},{"ruleId":"154","severity":1,"message":"160","line":13,"column":3,"nodeType":"156","messageId":"157","endLine":13,"endColumn":10},{"ruleId":"154","severity":1,"message":"161","line":14,"column":3,"nodeType":"156","messageId":"157","endLine":14,"endColumn":13},{"ruleId":"154","severity":1,"message":"162","line":15,"column":3,"nodeType":"156","messageId":"157","endLine":15,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":16,"column":3,"nodeType":"156","messageId":"157","endLine":16,"endColumn":9},{"ruleId":"164","severity":1,"message":"165","line":84,"column":34,"nodeType":"166","messageId":"167","endLine":84,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":85,"column":34,"nodeType":"166","messageId":"167","endLine":85,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":90,"column":36,"nodeType":"166","messageId":"167","endLine":90,"endColumn":38},{"ruleId":"150","replacedBy":"168"},{"ruleId":"152","replacedBy":"169"},{"ruleId":"154","severity":1,"message":"158","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":18},{"ruleId":"154","severity":1,"message":"170","line":1,"column":20,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"170","line":1,"column":20,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"171","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":19},{"ruleId":"154","severity":1,"message":"172","line":1,"column":21,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"154","severity":1,"message":"163","line":1,"column":45,"nodeType":"156","messageId":"157","endLine":1,"endColumn":51},{"ruleId":"173","severity":1,"message":"174","line":45,"column":6,"nodeType":"175","endLine":45,"endColumn":8,"suggestions":"176"},{"ruleId":"164","severity":1,"message":"165","line":47,"column":40,"nodeType":"166","messageId":"167","endLine":47,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":75,"column":52,"nodeType":"166","messageId":"167","endLine":75,"endColumn":54},{"ruleId":"154","severity":1,"message":"171","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":19},{"ruleId":"154","severity":1,"message":"172","line":1,"column":21,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":42,"column":32,"nodeType":"166","messageId":"167","endLine":42,"endColumn":34},{"ruleId":"154","severity":1,"message":"171","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":19},{"ruleId":"154","severity":1,"message":"172","line":1,"column":21,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"154","severity":1,"message":"177","line":1,"column":39,"nodeType":"156","messageId":"157","endLine":1,"endColumn":43},{"ruleId":"154","severity":1,"message":"161","line":5,"column":3,"nodeType":"156","messageId":"157","endLine":5,"endColumn":13},{"ruleId":"154","severity":1,"message":"178","line":9,"column":10,"nodeType":"156","messageId":"157","endLine":9,"endColumn":15},{"ruleId":"154","severity":1,"message":"179","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":25},{"ruleId":"154","severity":1,"message":"180","line":11,"column":8,"nodeType":"156","messageId":"157","endLine":11,"endColumn":21},{"ruleId":"154","severity":1,"message":"159","line":3,"column":3,"nodeType":"156","messageId":"157","endLine":3,"endColumn":9},{"ruleId":"154","severity":1,"message":"160","line":4,"column":3,"nodeType":"156","messageId":"157","endLine":4,"endColumn":10},{"ruleId":"154","severity":1,"message":"162","line":6,"column":3,"nodeType":"156","messageId":"157","endLine":6,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":7,"column":3,"nodeType":"156","messageId":"157","endLine":7,"endColumn":9},{"ruleId":"154","severity":1,"message":"179","line":12,"column":8,"nodeType":"156","messageId":"157","endLine":12,"endColumn":25},{"ruleId":"154","severity":1,"message":"181","line":15,"column":7,"nodeType":"156","messageId":"157","endLine":15,"endColumn":36},{"ruleId":"154","severity":1,"message":"182","line":16,"column":16,"nodeType":"156","messageId":"157","endLine":16,"endColumn":23},{"ruleId":"183","severity":2,"message":"184","line":31,"column":16,"nodeType":"156","messageId":"185","endLine":31,"endColumn":45},{"ruleId":"154","severity":1,"message":"171","line":3,"column":3,"nodeType":"156","messageId":"157","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"172","line":4,"column":3,"nodeType":"156","messageId":"157","endLine":4,"endColumn":19},{"ruleId":"154","severity":1,"message":"177","line":5,"column":3,"nodeType":"156","messageId":"157","endLine":5,"endColumn":7},{"ruleId":"154","severity":1,"message":"186","line":10,"column":3,"nodeType":"156","messageId":"157","endLine":10,"endColumn":16},{"ruleId":"154","severity":1,"message":"187","line":15,"column":8,"nodeType":"156","messageId":"157","endLine":15,"endColumn":30},{"ruleId":"154","severity":1,"message":"179","line":16,"column":8,"nodeType":"156","messageId":"157","endLine":16,"endColumn":25},{"ruleId":"154","severity":1,"message":"171","line":2,"column":3,"nodeType":"156","messageId":"157","endLine":2,"endColumn":12},{"ruleId":"154","severity":1,"message":"172","line":3,"column":3,"nodeType":"156","messageId":"157","endLine":3,"endColumn":19},{"ruleId":"154","severity":1,"message":"177","line":4,"column":3,"nodeType":"156","messageId":"157","endLine":4,"endColumn":7},{"ruleId":"154","severity":1,"message":"163","line":5,"column":3,"nodeType":"156","messageId":"157","endLine":5,"endColumn":9},{"ruleId":"154","severity":1,"message":"188","line":6,"column":3,"nodeType":"156","messageId":"157","endLine":6,"endColumn":9},{"ruleId":"154","severity":1,"message":"189","line":7,"column":3,"nodeType":"156","messageId":"157","endLine":7,"endColumn":14},{"ruleId":"154","severity":1,"message":"190","line":8,"column":3,"nodeType":"156","messageId":"157","endLine":8,"endColumn":16},{"ruleId":"154","severity":1,"message":"186","line":9,"column":3,"nodeType":"156","messageId":"157","endLine":9,"endColumn":16},{"ruleId":"154","severity":1,"message":"191","line":1,"column":37,"nodeType":"156","messageId":"157","endLine":1,"endColumn":46},{"ruleId":"154","severity":1,"message":"171","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":19},{"ruleId":"154","severity":1,"message":"192","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":46,"column":50,"nodeType":"166","messageId":"167","endLine":46,"endColumn":52},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["193"],["194"],"'useRef' is defined but never used.","'TextField' is defined but never used.","'TextareaAutosize' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isMyProfile' and 'params'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'Grid' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","'PersonAddIcon' is defined but never used.","'FriendshipNotificationsButton' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-undef","'friendshipNotificationsButton' is not defined.","undef","'DialogActions' is defined but never used.","'NotificationsContainer' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'Container' is defined but never used.","'generalFunctions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [isMyProfile, params]",{"range":"198","text":"199"},[1323,1325],"[isMyProfile, params]"]