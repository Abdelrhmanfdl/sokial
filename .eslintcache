[{"E:\\sokial\\sokial\\src\\index.js":"1","E:\\sokial\\sokial\\src\\App.js":"2","E:\\sokial\\sokial\\src\\reportWebVitals.js":"3","E:\\sokial\\sokial\\src\\components\\signup.js":"4","E:\\sokial\\sokial\\src\\components\\login.js":"5","E:\\sokial\\sokial\\src\\components\\profile.js":"6","E:\\sokial\\sokial\\src\\components\\posting.js":"7","E:\\sokial\\sokial\\src\\components\\post.js":"8","E:\\sokial\\sokial\\src\\components\\postsProfileSection.js":"9","E:\\sokial\\sokial\\src\\components\\profileHeader.js":"10","E:\\sokial\\sokial\\src\\components\\mainBar.js":"11","E:\\sokial\\sokial\\src\\components\\FriendshipNotificationsButton.js":"12","E:\\sokial\\sokial\\src\\components\\friendshipNotificationsButton.js":"13","E:\\sokial\\sokial\\src\\components\\notificationsContainer.js":"14","E:\\sokial\\sokial\\src\\components\\friendshipNotifEntry.js":"15","E:\\sokial\\sokial\\src\\usable functions\\endpoint-related.js":"16","E:\\sokial\\sokial\\src\\components\\postCommentsSection.js":"17","E:\\sokial\\sokial\\src\\usable functions\\general.js":"18","E:\\sokial\\sokial\\src\\components\\postComment.js":"19","E:\\sokial\\sokial\\src\\components\\postEditing.js":"20","E:\\sokial\\sokial\\src\\components\\home.js":"21","E:\\sokial\\sokial\\src\\components\\postsHomeSection.js":"22","E:\\sokial\\sokial\\src\\components\\profileImg.js":"23","E:\\sokial\\sokial\\src\\components\\profilePostsOption.js":"24","E:\\sokial\\sokial\\src\\components\\profileFriendsOption.js":"25","E:\\sokial\\sokial\\src\\components\\friendEntryProfileFriendsOption..js":"26"},{"size":231,"mtime":1611459015441,"results":"27","hashOfConfig":"28"},{"size":3026,"mtime":1613363340910,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":11531,"mtime":1611632160414,"results":"31","hashOfConfig":"28"},{"size":3163,"mtime":1611570261559,"results":"32","hashOfConfig":"28"},{"size":3440,"mtime":1613461116107,"results":"33","hashOfConfig":"28"},{"size":3673,"mtime":1616075322452,"results":"34","hashOfConfig":"28"},{"size":5951,"mtime":1616107222592,"results":"35","hashOfConfig":"28"},{"size":9600,"mtime":1616107289963,"results":"36","hashOfConfig":"28"},{"size":3360,"mtime":1613458516518,"results":"37","hashOfConfig":"28"},{"size":1986,"mtime":1612289921352,"results":"38","hashOfConfig":"28"},{"size":884,"mtime":1611910578522,"results":"39","hashOfConfig":"28"},{"size":5002,"mtime":1612290028624,"results":"40","hashOfConfig":"28"},{"size":248,"mtime":1611924095031,"results":"41","hashOfConfig":"28"},{"size":1399,"mtime":1613440904775,"results":"42","hashOfConfig":"28"},{"size":1375,"mtime":1611999343698,"results":"43","hashOfConfig":"28"},{"size":12420,"mtime":1616113221411,"results":"44","hashOfConfig":"28"},{"size":261,"mtime":1612055288154,"results":"45","hashOfConfig":"28"},{"size":4328,"mtime":1613821225117,"results":"46","hashOfConfig":"28"},{"size":2051,"mtime":1612256386286,"results":"47","hashOfConfig":"28"},{"size":350,"mtime":1613363893079,"results":"48","hashOfConfig":"28"},{"size":9872,"mtime":1613429644534,"results":"49","hashOfConfig":"28"},{"size":3826,"mtime":1613821026561,"results":"50","hashOfConfig":"28"},{"size":1317,"mtime":1616070901927,"results":"51","hashOfConfig":"28"},{"size":2882,"mtime":1613825725022,"results":"52","hashOfConfig":"28"},{"size":2247,"mtime":1613827341863,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"f5302e",{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"56"},"E:\\sokial\\sokial\\src\\index.js",[],["123","124"],"E:\\sokial\\sokial\\src\\App.js",["125","126","127","128","129","130","131"],"import \"./App.scss\";\r\nimport Signup from \"./components/signup\";\r\nimport Login from \"./components/login\";\r\nimport { Link, Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Profile from \"./components/profile\";\r\nimport Posting from \"./components/posting\";\r\nimport Post from \"./components/post\";\r\nimport Home from \"./components/home\";\r\nimport MainBar from \"./components/mainBar\";\r\nimport { useState, Component } from \"react\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gotUserData = this.gotUserData.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n\r\n    this.state = {\r\n      identity: null,\r\n      authChecked: false,\r\n      profileImg: null,\r\n    };\r\n  }\r\n\r\n  gotUserData(data) {\r\n    this.setState({ identity: data });\r\n    window.location.replace(\"/home\");\r\n  }\r\n  async handleLogout() {\r\n    await fetch(\"/logout\", {\r\n      method: \"post\",\r\n    });\r\n\r\n    window.location.replace(\"/login\");\r\n    this.setState({ identity: null });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"/about-auth\", { method: \"GET\" })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        if (res.auth) {\r\n          if (\r\n            window.location.pathname == \"/login\" ||\r\n            window.location.pathname == \"/signup\"\r\n          )\r\n            window.location.replace(\"/home\");\r\n          this.setState({ identity: res.userData, authChecked: true });\r\n\r\n          return fetch(\r\n            `/get-profile-img/${res.userData.id}?` +\r\n              new URLSearchParams({\r\n                profile_photo_path: res.userData.profile_photo_path,\r\n              })\r\n          );\r\n        } else {\r\n          if (window.location.pathname == \"/home\")\r\n            window.location.replace(\"/login\");\r\n          this.setState({ authChecked: true });\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res && res.ok) return res.blob();\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          const img = URL.createObjectURL(res);\r\n          this.setState({\r\n            identity: { ...this.state.identity, profileImg: img },\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.authChecked)\r\n      return (\r\n        <Router>\r\n          <MainBar logout={this.handleLogout} identity={this.state.identity} />\r\n          <Switch>\r\n            <Route\r\n              path=\"/login\"\r\n              component={() => <Login gotUserData={this.gotUserData} />}\r\n            />\r\n            <Route\r\n              path=\"/signup\"\r\n              component={() => <Signup gotUserData={this.gotUserData} />}\r\n            />\r\n            <Route\r\n              path=\"/profile\"\r\n              component={() => <Profile identity={this.state.identity} />}\r\n            />\r\n            <Route\r\n              path=\"/home\"\r\n              component={() => <Home identity={this.state.identity} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    else return null;\r\n  }\r\n}\r\nexport default App;\r\n","E:\\sokial\\sokial\\src\\reportWebVitals.js",[],["132","133"],"E:\\sokial\\sokial\\src\\components\\signup.js",["134","135"],"import { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\n/*\r\nTODO :: Show and handle invalidation of account creation\r\n*/\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { countries } from \"../data-stores/login and signup.json\";\r\n\r\nconst maxNameLen = 20,\r\n  minNameLen = 2,\r\n  maxPassLen = 20,\r\n  minPassLen = 6,\r\n  maxCityLen = 20,\r\n  minCityLen = 2;\r\n\r\nconst validationSchema = yup.object({\r\n  fname: yup\r\n    .string()\r\n    .min(\r\n      minNameLen,\r\n      `First name should be of minimum ${minNameLen} characters length`\r\n    )\r\n    .max(\r\n      maxNameLen,\r\n      `First name should be of maximum ${maxNameLen} characters length`\r\n    )\r\n    .required(\"First name is required\"),\r\n\r\n  lname: yup\r\n    .string()\r\n    .min(\r\n      minNameLen,\r\n      `Last name should be of minimum ${minNameLen} characters length`\r\n    )\r\n    .max(\r\n      maxNameLen,\r\n      `Last name should be of maximum ${maxNameLen} characters length`\r\n    )\r\n    .required(\"Last name is required\"),\r\n\r\n  email: yup\r\n    .string()\r\n    .email(\"This email is invalid\")\r\n    .required(\"Email is required\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      minPassLen,\r\n      `Password should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxPassLen,\r\n      `Password should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"Password is required\"),\r\n\r\n  gender: yup.string().required(\"Gender is required\"),\r\n\r\n  birthday: yup.string().required(\"Birth day is required\"),\r\n  birthmonth: yup.string().required(\"Birth month is required\"),\r\n  birthyear: yup.string().required(\"Birth year is required\"),\r\n\r\n  country: yup.string().required(\"Country is required\"),\r\n  city: yup\r\n    .string()\r\n    .min(\r\n      minCityLen,\r\n      `City should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxCityLen,\r\n      `City should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"City is required\"),\r\n});\r\n\r\nconst Birthdate = (props) => {\r\n  const minPossibleYear = 1900;\r\n  const date = new Date();\r\n\r\n  const years = [],\r\n    days = Array.from(Array(31).keys()).map((x) => {\r\n      return { label: String(x + 1), value: x + 1 };\r\n    }),\r\n    monthes = Array.from(Array(12).keys()).map((x) => {\r\n      return { label: String(x + 1), value: x + 1 };\r\n    });\r\n  for (let i = date.getFullYear(); i >= minPossibleYear; i--)\r\n    years.push({\r\n      label: String(i),\r\n      value: i,\r\n    });\r\n\r\n  return (\r\n    <FormControl>\r\n      <Autocomplete\r\n        id=\"birthday\"\r\n        name=\"birthday\"\r\n        style={{ width: 300 }}\r\n        options={days}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthday &&\r\n                Boolean(props.formik.errors.birthday)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthday && props.formik.errors.birthday\r\n              }\r\n              {...params}\r\n              label=\"Day of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newday) => {\r\n          if (newday) props.formik.values.birthday = newday.value;\r\n          else props.formik.values.birthday = \"\";\r\n          await props.formik.handleChange(\"birthday\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthday && Boolean(props.formik.errors.birthday)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthday && props.formik.errors.birthday\r\n        }\r\n      />\r\n      <Autocomplete\r\n        id=\"birthmonth\"\r\n        name=\"birthmonth\"\r\n        style={{ width: 300 }}\r\n        options={monthes}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthmonth &&\r\n                Boolean(props.formik.errors.birthmonth)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthmonth &&\r\n                props.formik.errors.birthmonth\r\n              }\r\n              {...params}\r\n              label=\"Month of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newmonth) => {\r\n          if (newmonth) props.formik.values.birthmonth = newmonth.value;\r\n          else props.formik.values.birthmonth = \"\";\r\n          await props.formik.handleChange(\"birthmonth\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthmonth &&\r\n          Boolean(props.formik.errors.birthmonth)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthmonth && props.formik.errors.birthmonth\r\n        }\r\n      />\r\n\r\n      <Autocomplete\r\n        id=\"birthyear\"\r\n        name=\"birthyear\"\r\n        style={{ width: 300 }}\r\n        options={years}\r\n        autoHighlight\r\n        getOptionLabel={(option) => option.label}\r\n        renderInput={(params) => {\r\n          return (\r\n            <TextField\r\n              error={\r\n                props.formik.touched.birthyear &&\r\n                Boolean(props.formik.errors.birthyear)\r\n              }\r\n              helperText={\r\n                props.formik.touched.birthyear && props.formik.errors.birthyear\r\n              }\r\n              {...params}\r\n              label=\"Year of birth\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        }}\r\n        onChange={async (e, newyear) => {\r\n          if (newyear) props.formik.values.birthyear = newyear.value;\r\n          else props.formik.values.birthyear = \"\";\r\n          await props.formik.handleChange(\"birthyear\");\r\n        }}\r\n        error={\r\n          props.formik.touched.birthyear &&\r\n          Boolean(props.formik.errors.birthyear)\r\n        }\r\n        helperText={\r\n          props.formik.touched.birthyear && props.formik.errors.birthyear\r\n        }\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Signup = (props) => {\r\n  // Redirection to 'home' is a token recognised\r\n  if (document.cookie.indexOf(\"; token\") > -1) {\r\n    window.location.replace(\"/home\");\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      birthday: \"\",\r\n      birthmonth: \"\",\r\n      birthyear: \"\",\r\n      gender: \"\",\r\n      country: \"\",\r\n      city: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      const user = {\r\n        fName: values.fname,\r\n        lName: values.lname,\r\n        email: values.email,\r\n        password: values.password,\r\n        country: values.country,\r\n        city: values.city,\r\n        gender: values.gender,\r\n        dob: values.birthyear + \"-\" + values.birthmonth + \"-\" + values.birthday,\r\n      };\r\n\r\n      try {\r\n        const res = await fetch(\"/signup\", {\r\n          method: \"post\",\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const resJson = await res.json();\r\n        if (!resJson.valid) {\r\n          console.log(resJson.message);\r\n        } else {\r\n          // valid request\r\n          props.gotUserData(resJson.userData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <FormControl>\r\n        <TextField\r\n          id=\"in-txt-fname\"\r\n          name=\"fname\"\r\n          label=\"First Name\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.fname && Boolean(formik.errors.fname)}\r\n          helperText={formik.touched.fname && formik.errors.fname}\r\n        />\r\n        <TextField\r\n          id=\"in-txt-lname\"\r\n          name=\"lname\"\r\n          label=\"Last Name\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.lname && Boolean(formik.errors.lname)}\r\n          helperText={formik.touched.lname && formik.errors.lname}\r\n        />\r\n        <TextField\r\n          id=\"in-txt-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n\r\n        <FormControl\r\n          component=\"fieldset\"\r\n          error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n          helperText={formik.touched.gender && formik.errors.gender}\r\n        >\r\n          <RadioGroup name=\"gender\" row onChange={formik.handleChange}>\r\n            <FormControlLabel\r\n              value=\"m\"\r\n              control={<Radio />}\r\n              label=\"Male\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"f\"\r\n              control={<Radio />}\r\n              label=\"Female\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <FormHelperText\r\n              disabled={formik.touched.gender && Boolean(formik.errors.gender)}\r\n            >\r\n              {formik.errors.gender}\r\n            </FormHelperText>\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Birthdate formik={formik} />\r\n\r\n        <Autocomplete\r\n          id=\"country\"\r\n          style={{ width: 300 }}\r\n          name=\"country\"\r\n          options={countries}\r\n          autoHighlight\r\n          getOptionLabel={(option) => option.label}\r\n          renderInput={(params) => {\r\n            return (\r\n              <TextField\r\n                {...params}\r\n                label=\"Choose a country\"\r\n                variant=\"outlined\"\r\n                error={formik.touched.country && Boolean(formik.errors.country)}\r\n                helperText={formik.touched.country && formik.errors.country}\r\n              />\r\n            );\r\n          }}\r\n          onChange={(e, newcountry) => {\r\n            if (newcountry) formik.values.country = newcountry.code;\r\n            else formik.values.country = \"\";\r\n            formik.handleChange(\"country\");\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"city\"\r\n          name=\"city\"\r\n          label=\"City\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.city && Boolean(formik.errors.city)}\r\n          helperText={formik.touched.city && formik.errors.city}\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          SignUp\r\n        </Button>\r\n        <small>\r\n          <span style={{ color: \"gray\" }}>already have an account? </span>\r\n          <a href=\"\\login\">login</a>\r\n        </small>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\sokial\\sokial\\src\\components\\login.js",["136"],"import { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst maxPassLen = 20,\r\n  minPassLen = 6;\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"This email is invalid\")\r\n    .required(\"Email is required\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      minPassLen,\r\n      `Password should be of minimum ${minPassLen} characters length`\r\n    )\r\n    .max(\r\n      maxPassLen,\r\n      `Password should be of maximum ${maxPassLen} characters length`\r\n    )\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Login = (props) => {\r\n  // Redirection to 'home' is a token recognised\r\n  /*if (document.cookie.indexOf(\"; token\") > -1) {\r\n    window.location.replace(\"/home\");\r\n    // TODO :: Get a way to enforce not show Login component\r\n  }*/\r\n\r\n  const [loginError, setLoginError] = useState(null);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      const user = {\r\n        email: values.email,\r\n        password: values.password,\r\n      };\r\n\r\n      try {\r\n        const res = await fetch(\"/login\", {\r\n          method: \"post\",\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const resJson = await res.json();\r\n        if (!resJson.valid) {\r\n          setLoginError({ message: resJson.message });\r\n          console.log(resJson.message);\r\n        } else {\r\n          // valid request\r\n          props.gotUserData(resJson.userData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form id=\"login-form\" onSubmit={formik.handleSubmit}>\r\n      <FormControl error={loginError}>\r\n        <FormHelperText disabled={loginError}>\r\n          {loginError && loginError.message}\r\n        </FormHelperText>\r\n        <TextField\r\n          id=\"in-txt-email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n        <small>\r\n          <span style={{ color: \"gray\" }}>want to create an account? </span>\r\n          <a href=\"\\signup\">signup</a>\r\n        </small>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\sokial\\sokial\\src\\components\\profile.js",["137","138","139","140","141","142","143","144","145","146","147"],"import { TextField, TextareaAutosize, Grid, Button } from \"@material-ui/core\";\r\nimport ProfileHeader from \"./profileHeader\";\r\nimport Posting from \"./posting\";\r\nimport PostsProfileSection from \"./postsProfileSection\";\r\nimport ProfilePostsOption from \"./profilePostsOption\";\r\nimport ProfileFriendsOption from \"./profileFriendsOption\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Profile = (props) => {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [friendshipRel, setFriendshipRel] = useState(null);\r\n  const [profileChosenOption, setProfileChosenOption] = useState(\"posts\");\r\n\r\n  // Get the userId in the path (want to get this profile)\r\n  const params = new URLSearchParams(window.location.search);\r\n\r\n  if (params.get(\"id\") === null) {\r\n    // then it's my profile\r\n    window.location.replace(\r\n      `${window.location.origin}/profile?id=${props.identity.id}`\r\n    );\r\n  }\r\n\r\n  // Get basic data of current profile\r\n  useEffect(() => {\r\n    fetch(\r\n      `/get-basic-user-data/${params.get(\"id\")}?` +\r\n        new URLSearchParams({\r\n          getFriendshipRel: !isMyProfile,\r\n        }),\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        if (!res.valid) throw new Error(res.message);\r\n        else {\r\n          setFriendshipRel(res.friendshipRel);\r\n\r\n          if (res.userData.profile_photo_path)\r\n            return Promise.all([\r\n              res.userData,\r\n              fetch(\r\n                `/get-profile-img/${res.userData.id}?` +\r\n                  new URLSearchParams({\r\n                    profile_photo_path: res.userData.profile_photo_path,\r\n                  })\r\n              ),\r\n            ]);\r\n          else setProfileData(res.userData);\r\n        }\r\n      })\r\n      .then(([userData, res]) => {\r\n        if (res && res.ok) return Promise.all([userData, res.blob()]);\r\n      })\r\n      .then(([userData, img]) => {\r\n        img = URL.createObjectURL(img);\r\n        setProfileData({ ...userData, profileImg: img });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR:\", err.message);\r\n      });\r\n  }, [params.get(\"id\")]);\r\n\r\n  const isMyProfile = params.get(\"id\") == props.identity.id;\r\n\r\n  if (profileData === null || (!isMyProfile && !friendshipRel)) return null;\r\n  else\r\n    return (\r\n      <div>\r\n        <ProfileHeader\r\n          setProfileChosenOption={setProfileChosenOption}\r\n          profileData={profileData}\r\n          isMyProfile={isMyProfile}\r\n          areFriends={isMyProfile ? undefined : friendshipRel.areFriends}\r\n          thereIsFrReq={\r\n            friendshipRel &&\r\n            (friendshipRel.friendshipReqSenderId ||\r\n              friendshipRel.friendshipReqReceiverId)\r\n          }\r\n          didISendFrReq={\r\n            isMyProfile\r\n              ? undefined\r\n              : friendshipRel.friendshipReqSenderId === props.identity.id\r\n          }\r\n        />\r\n        {profileChosenOption == \"posts\" ? (\r\n          <ProfilePostsOption\r\n            identity={props.identity}\r\n            isMyProfile={isMyProfile}\r\n            profileData={profileData}\r\n          />\r\n        ) : profileChosenOption == \"friends\" ? (\r\n          <ProfileFriendsOption\r\n            identity={props.identity}\r\n            isMyProfile={isMyProfile}\r\n            profileData={profileData}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\sokial\\sokial\\src\\components\\posting.js",["148","149","150","151"],"E:\\sokial\\sokial\\src\\components\\post.js",["152","153","154","155","156","157"],"E:\\sokial\\sokial\\src\\components\\postsProfileSection.js",["158"],"E:\\sokial\\sokial\\src\\components\\profileHeader.js",["159","160"],"import { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ProfileImg from \"./profileImg\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { friendshipRelatedFunctions } from \"../usable functions/endpoint-related\";\r\n\r\nconst ProfileHeader = (props) => {\r\n  const friendshipButtonsAttr = {\r\n    variant: \"outlined\",\r\n    color: \"primary\",\r\n  };\r\n\r\n  const friendshipRelButton = props.isMyProfile ? null : props.areFriends ? (\r\n    <Button\r\n      {...friendshipButtonsAttr}\r\n      startIcon={<RemoveCircleIcon />}\r\n      onClick={() => {\r\n        friendshipRelatedFunctions.handleUnfriendClick(props.profileData.id);\r\n      }}\r\n    >\r\n      Unfriend\r\n    </Button>\r\n  ) : !props.thereIsFrReq ? (\r\n    <Button\r\n      {...friendshipButtonsAttr}\r\n      startIcon={<AddCircleIcon />}\r\n      onClick={() => {\r\n        friendshipRelatedFunctions.handleAddFriendClick(props.profileData.id);\r\n      }}\r\n    >\r\n      Add Friend\r\n    </Button>\r\n  ) : props.didISendFrReq ? (\r\n    <Button\r\n      {...friendshipButtonsAttr}\r\n      startIcon={<CancelIcon />}\r\n      onClick={() => {\r\n        friendshipRelatedFunctions.handleUnrequestFriendship(\r\n          props.profileData.id\r\n        );\r\n      }}\r\n    >\r\n      Unrequest friendship\r\n    </Button>\r\n  ) : (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n      <Button\r\n        {...friendshipButtonsAttr}\r\n        startIcon={<CheckCircleIcon />}\r\n        onClick={() => {\r\n          friendshipRelatedFunctions.handleAcceptFriendship(\r\n            props.profileData.id\r\n          );\r\n        }}\r\n      >\r\n        Accept friendship\r\n      </Button>\r\n\r\n      <Button\r\n        {...friendshipButtonsAttr}\r\n        startIcon={<CancelIcon color={\"secondary\"} />}\r\n        onClick={() => {\r\n          friendshipRelatedFunctions.handleRejectFriendship(\r\n            props.profileData.id\r\n          );\r\n        }}\r\n      >\r\n        Reject friendship\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div id=\"profile-header-div\">\r\n      <div id=\"profile-cover-container\"></div>\r\n      <ProfileImg\r\n        profileData={props.profileData}\r\n        isMyProfile={props.isMyProfile}\r\n      />\r\n\r\n      <div id=\"profile-name-container\">{`${props.profileData.firstName} ${props.profileData.lastName}`}</div>\r\n      <div id=\"profile-friendship-buttons-div\">{friendshipRelButton}</div>\r\n      <div id=\"profile-header-options-container\">\r\n        <Button\r\n          id=\"profile-header-posts-option-btn\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            props.setProfileChosenOption(\"posts\");\r\n          }}\r\n        >\r\n          Posts\r\n        </Button>\r\n        <Button\r\n          id=\"profile-header-friends-option-btn\"\r\n          size=\"large\"\r\n          onClick={() => {\r\n            props.setProfileChosenOption(\"friends\");\r\n          }}\r\n        >\r\n          Friends\r\n        </Button>\r\n        <Button id=\"profile-header-about-option-btn\" size=\"large\">\r\n          About\r\n        </Button>\r\n\r\n        <Button id=\"profile-header-photos-option-btn\" size=\"large\">\r\n          Photos\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeader;\r\n","E:\\sokial\\sokial\\src\\components\\mainBar.js",["161"],"import { NavLink } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Badge } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FriendshipNotificationsButton from \"./friendshipNotificationsButton\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst MainBar = (props) => {\r\n  if (props.identity == null) {\r\n    return (\r\n      <AppBar position=\"fixed\" id=\"main-bar\">\r\n        <Toolbar id=\"mainbar-notlogged-toolbar\">\r\n          <Typography variant=\"h6\">Sokial</Typography>\r\n          <div id=\"mainbar-notlogged-buttons\">\r\n            <Button color=\"inherit\">\r\n              <NavLink to=\"/login\" className=\"navlink-button\">\r\n                Login\r\n              </NavLink>\r\n            </Button>\r\n            <Button color=\"inherit\" href=\"/signup\" aria-current=\"page\">\r\n              <NavLink to=\"/Signup\" className=\"navlink-button\">\r\n                Signup\r\n              </NavLink>\r\n            </Button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  } else {\r\n    return (\r\n      <AppBar position=\"fixed\" id=\"main-bar\">\r\n        <Toolbar id=\"mainbar-logged-toolbar\">\r\n          <Typography variant=\"h6\">Sokial</Typography>\r\n\r\n          <NavLink to=\"/home\" className=\"navlink-button\">\r\n            <IconButton color=\"inherit\">\r\n              <HomeIcon />\r\n            </IconButton>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to={`/profile?id=${props.identity.id}`}\r\n            className=\"navlink-button\"\r\n          >\r\n            <IconButton color=\"inherit\">\r\n              <AccountCircleIcon />\r\n            </IconButton>\r\n          </NavLink>\r\n\r\n          <FriendshipNotificationsButton identity={props.identity} />\r\n          <Button id=\"\" color=\"inherit\" onClick={props.logout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MainBar;\r\n","E:\\sokial\\sokial\\src\\components\\FriendshipNotificationsButton.js",["162","163","164","165","166","167","168","169"],"E:\\sokial\\sokial\\src\\components\\friendshipNotificationsButton.js",["170","171","172","173","174","175"],"import { Component, createRef } from \"react\";\r\nimport {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport FriendshipNotifEntry from \"./friendshipNotifEntry\";\r\nimport NotificationsContainer from \"./notificationsContainer\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass FriendshipNotificationsButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDialog: false,\r\n\r\n      noMoreNotif: false,\r\n      fetchedNotif: [],\r\n      shownNotifDivs: [],\r\n    };\r\n\r\n    this.dialogRef = createRef(null);\r\n\r\n    this.numNotifToFetch = 15; // It's a parameter that can be changed\r\n    this.numNotifToPush = 5; // It's a parameter that can be changed\r\n\r\n    this.handleClickFriendshipNotif = this.handleClickFriendshipNotif.bind(\r\n      this\r\n    );\r\n    this.pushToShownNotif = this.pushToShownNotif.bind(this);\r\n    this.handleWaitingForNotif = this.handleWaitingForNotif.bind(this);\r\n    this.fetchNewNotif = this.fetchNewNotif.bind(this);\r\n  }\r\n\r\n  // Fetching Friendship Notifications\r\n  fetchNewNotif() {\r\n    const escapeNotif = this.state.fetchedNotif.length;\r\n    const limitNotif = this.numNotifToFetch;\r\n\r\n    console.log(`${escapeNotif} ${limitNotif}`);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `/friendship-request/requests?` +\r\n          new URLSearchParams({\r\n            asreceiver: true,\r\n            esc: escapeNotif,\r\n            limit: limitNotif,\r\n          }),\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          if (!res.valid) {\r\n            // TODO :: Handle invalid fetch\r\n          } else {\r\n            console.log(res.data);\r\n            return resolve(res.data);\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  handleClickFriendshipNotif() {\r\n    this.setState({\r\n      openDialog: !this.state.openDialog,\r\n    });\r\n  }\r\n\r\n  pushToShownNotif() {\r\n    const tmpNotifDivs = [];\r\n\r\n    let toPushLeft = this.state.shownNotifDivs.length;\r\n    let toPushRight = Math.min(\r\n      toPushLeft + this.numNotifToPush,\r\n      this.state.fetchedNotif.length\r\n    );\r\n\r\n    for (let i = toPushLeft; i < toPushRight; i++)\r\n      tmpNotifDivs.push(\r\n        <FriendshipNotifEntry\r\n          id={this.state.fetchedNotif[i].id}\r\n          fullName={`${this.state.fetchedNotif[i].firstName} ${this.state.fetchedNotif[i].lastName}`}\r\n        />\r\n      );\r\n\r\n    this.setState({\r\n      shownNotifDivs: this.state.shownNotifDivs.concat(tmpNotifDivs),\r\n    });\r\n  }\r\n\r\n  handleWaitingForNotif() {\r\n    this.setState({ waitingForNotif: true });\r\n\r\n    if (this.state.fetchedNotif.length === this.state.shownNotifDivs.length) {\r\n      // Need to fetch new notif\r\n      this.fetchNewNotif().then((notif) => {\r\n        //console.log(\"Fetched notif >> \", notif);\r\n        if (notif.length === 0) {\r\n          this.setState({ noMoreNotif: true });\r\n        } else {\r\n          this.setState({\r\n            fetchedNotif: this.state.fetchedNotif.concat(notif),\r\n          });\r\n          this.pushToShownNotif();\r\n        }\r\n      });\r\n    } else {\r\n      this.pushToShownNotif();\r\n    }\r\n\r\n    this.fetching = false;\r\n    this.setState({ waitingForNotif: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleWaitingForNotif();\r\n  }\r\n\r\n  render() {\r\n    let endDiv = null;\r\n    if (this.state.noMoreNotif === false && this.state.waitingForNotif)\r\n      endDiv = (\r\n        <div id=\"notif-profile-section-loading-div\">\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    else if (this.state.noMoreNotif === false) {\r\n      endDiv = (\r\n        <div>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={this.handleWaitingForNotif}\r\n          >\r\n            Load more...\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"notifbtn-with-container\">\r\n        <IconButton color=\"inherit\" onClick={this.handleClickFriendshipNotif}>\r\n          <Badge\r\n            badgeContent={this.state.fetchedNotif.length}\r\n            color=\"secondary\"\r\n            variant=\"dot\"\r\n          >\r\n            <PersonAddIcon />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <Dialog\r\n          open={this.state.openDialog}\r\n          onClose={this.handleClickFriendshipNotif}\r\n        >\r\n          <div ref={this.dialogRef}></div>\r\n          <DialogTitle style={{ textAlign: \"center\" }}>\r\n            Friendship Notifications\r\n          </DialogTitle>\r\n          <DialogContent class=\"notif-container\">\r\n            {this.state.shownNotifDivs} {endDiv}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendshipNotificationsButton;\r\n","E:\\sokial\\sokial\\src\\components\\notificationsContainer.js",["176","177","178","179","180","181","182","183"],"import {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst NotificationsContainer = (props) => {};\r\n\r\nexport default NotificationsContainer;\r\n","E:\\sokial\\sokial\\src\\components\\friendshipNotifEntry.js",["184"],"import { Grid, Button, ButtonGroup, Container } from \"@material-ui/core\";\r\nimport { friendshipRelatedFunctions as frFuncs } from \"../usable functions/endpoint-related\";\r\n\r\nconst FriendshipNotifEntry = (props) => {\r\n  return (\r\n    <Grid direction=\"row\" className=\"friendship-notif-entry\" container>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <div class=\"friendship-notif-img\"></div>\r\n        <a\r\n          class=\"clickable-account-name friendship-notif-name\"\r\n          href={`${window.location.origin}/profile?id=${props.id}`}\r\n          style={{ marginLeft: \"4px\" }}\r\n        >\r\n          {props.fullName}\r\n        </a>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <ButtonGroup\r\n          size={\"small\"}\r\n          variant=\"contained\"\r\n          aria-label=\"contained primary button group\"\r\n        >\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              frFuncs.handleAcceptFriendship(props.id);\r\n            }}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => {\r\n              frFuncs.handleRejectFriendship(props.id);\r\n            }}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FriendshipNotifEntry;\r\n","E:\\sokial\\sokial\\src\\usable functions\\endpoint-related.js",[],"E:\\sokial\\sokial\\src\\components\\postCommentsSection.js",["185"],"E:\\sokial\\sokial\\src\\usable functions\\general.js",[],"E:\\sokial\\sokial\\src\\components\\postComment.js",["186"],"import { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  MenuItem,\r\n  Menu,\r\n  TextareaAutosize,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"./../images/default_profile_image.png\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst PostComment = (props) => {\r\n  const [menuAnchorElem, setMenuAnchorElem] = useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n  const editingAreaRef = useRef(null);\r\n  const authorProfileImgRef = useRef(null);\r\n  const isMoreOptionsOpen = menuAnchorElem !== null;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      authorProfileImgRef &&\r\n      authorProfileImgRef.current &&\r\n      props.commentAuthor.authorProfileImg\r\n    ) {\r\n      authorProfileImgRef.current.src = props.commentAuthor.authorProfileImg;\r\n    } else if (authorProfileImgRef.current) {\r\n      authorProfileImgRef.current.src = Avatar;\r\n    }\r\n  }, [authorProfileImgRef, props.commentAuthor.authorProfileImg]);\r\n\r\n  const handleOpenMoreOptions = (event) => {\r\n    setMenuAnchorElem(event.target);\r\n  };\r\n\r\n  const handleCloseMoreOptions = () => {\r\n    setMenuAnchorElem(null);\r\n  };\r\n\r\n  const handleClickEditComment = () => {\r\n    setEditing(true);\r\n    handleCloseMoreOptions();\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    props.handleEditComment(props.commentIndex, editingAreaRef.current.value);\r\n    setEditing(false);\r\n    handleCloseMoreOptions();\r\n  };\r\n\r\n  const handleDeleteComment = () => {\r\n    props.handleDeleteComment(props.commentIndex);\r\n    setEditing(false);\r\n    handleCloseMoreOptions();\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-comment\">\r\n      <a\r\n        href={`${window.location.origin}/profile?id=${props.commentAuthor.id}`}\r\n      >\r\n        <img ref={authorProfileImgRef} className=\"comment-author-img\"></img>\r\n      </a>\r\n      <div className=\"comment-right-col\">\r\n        <a\r\n          className=\"clickable-account-name comment-author-name\"\r\n          href={`${window.location.origin}/profile?id=${props.commentAuthor.id}`}\r\n        >\r\n          {`${props.commentAuthor.first_name} ${props.commentAuthor.last_name}`}\r\n        </a>\r\n\r\n        <div className=\"comment-content\">\r\n          {!editing ? (\r\n            props.content\r\n          ) : (\r\n            <div\r\n              class=\"post-commenting-section\"\r\n              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            >\r\n              <TextareaAutosize\r\n                rowsMin={2}\r\n                rowsMax={8}\r\n                ref={editingAreaRef}\r\n                defaultValue={props.content}\r\n                style={{\r\n                  width: \"100%\",\r\n                  resize: \"none\",\r\n                  overflow: \"auto\",\r\n                  outlineStyle: \"none\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              />\r\n              <div>\r\n                <ButtonGroup\r\n                  style={{ marginTop: \"5px\" }}\r\n                  orientation={\"horizontal\"}\r\n                >\r\n                  <Button onClick={handleSaveEdit} style={{ width: \"50%\" }}>\r\n                    Save\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setEditing(false);\r\n                    }}\r\n                    style={{ width: \"50%\" }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {props.commentAuthor.id === props.identity.id ? (\r\n        <div className=\"comment-more-div\">\r\n          {!editing ? (\r\n            <Button\r\n              id=\"comment-more-btn\"\r\n              // disableRipple\r\n              disabled={editing}\r\n              style={{ backgroundColor: \"transparent\" }}\r\n              startIcon={<MoreVertIcon />}\r\n              onClick={handleOpenMoreOptions}\r\n            />\r\n          ) : null}\r\n\r\n          <Menu\r\n            anchorEl={menuAnchorElem}\r\n            open={isMoreOptionsOpen}\r\n            onClose={handleCloseMoreOptions}\r\n          >\r\n            <MenuItem onClick={handleClickEditComment}>Edit</MenuItem>\r\n            <MenuItem onClick={handleDeleteComment}>Delete</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostComment;\r\n","E:\\sokial\\sokial\\src\\components\\postEditing.js",["187","188"],"import {\r\n  TextareaAutosize,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport generalFunctions from \"../usable functions/general\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nconst PostEditing = (props) => {\r\n  const [disablePosting, setDisablePosting] = useState(true);\r\n  const [disableWriting, setDisableWriting] = useState(false);\r\n  const textareaRef = useRef(null);\r\n\r\n  const handleClosePostingDialog = () => {\r\n    props.setEditingPost(false);\r\n  };\r\n\r\n  const handleClickSave = () => {\r\n    setDisablePosting(true);\r\n    setDisableWriting(false);\r\n    props.handleEditPost(props.postIndex, textareaRef.current.value);\r\n    handleClosePostingDialog();\r\n  };\r\n\r\n  if (!props.postContentRef.current) return null;\r\n  return (\r\n    <Dialog open={props.editingPost} onClose={handleClosePostingDialog}>\r\n      <DialogTitle style={{ textAlign: \"center\" }}>Post Editing</DialogTitle>\r\n      <DialogContent\r\n        style={{ width: \"400px\", height: \"200px\", padding: \"8px 0px\" }}\r\n      >\r\n        <TextareaAutosize\r\n          ref={textareaRef}\r\n          rowsMin={3}\r\n          rowsMax={8}\r\n          autoFocus\r\n          disabled={disableWriting}\r\n          defaultValue={String(\r\n            props.postContentRef.current.firstChild.textContent\r\n          )}\r\n          placeholder=\"What's on your mind?\"\r\n          onInput={() => {\r\n            if (textareaRef.current.value.trim() == \"\") {\r\n              setDisablePosting(true);\r\n            } else if (disablePosting) setDisablePosting(false);\r\n          }}\r\n          style={{\r\n            width: \"100%\",\r\n            outlineStyle: \"none\",\r\n            borderStyle: \"none\",\r\n            resize: \"none\",\r\n          }}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClickSave} disabled={disablePosting}>\r\n          Save\r\n        </Button>\r\n        <Button onClick={handleClosePostingDialog}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PostEditing;\r\n","E:\\sokial\\sokial\\src\\components\\home.js",["189","190"],"import { useState, useEffect } from \"react\";\r\nimport PostsHomeSection from \"./postsHomeSection\";\r\nimport Posting from \"./posting\";\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>HOME</h1>\r\n      <Posting identity={props.identity} />\r\n      <PostsHomeSection identity={props.identity} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\sokial\\sokial\\src\\components\\postsHomeSection.js",[],"E:\\sokial\\sokial\\src\\components\\profileImg.js",["191","192","193","194","195","196","197","198","199","200"],"import { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  TextareaAutosize,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { friendshipRelatedFunctions } from \"../usable functions/endpoint-related\";\r\nimport Avatar from \"./../images/default_profile_image.png\";\r\n\r\nconst ProfileImg = (props) => {\r\n  const [fetchedImage, setFetchedImage] = useState({\r\n    isFetched: false,\r\n    img: null,\r\n  });\r\n  const [choosingImg, setChoosingImg] = useState(false);\r\n  const uploadProfileImgBtnRef = useRef(null);\r\n  const uploadedImgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(Avatar);\r\n    if (uploadedImgRef.current && props.profileData.profile_photo_path) {\r\n      uploadedImgRef.current.src = props.profileData.profileImg || \" \";\r\n    } else if (uploadedImgRef.current) {\r\n      uploadedImgRef.current.src = Avatar;\r\n    }\r\n  }, [props.profileData.profileImg, uploadedImgRef, window.location.href]);\r\n\r\n  const handleSelectImg = (img) => {\r\n    // This is used when the user select an img, then he needs to confirm it or cancel.\r\n\r\n    //console.log(URL.createObjectURL(img.target.files[0]));\r\n    console.log(img.target.files[0]);\r\n    uploadedImgRef.current.src = URL.createObjectURL(img.target.files[0]);\r\n    setChoosingImg(true);\r\n  };\r\n\r\n  const handleCancelChoosing = (img) => {\r\n    // This is used when the user select an img, then he needs to confirm it or cancel.\r\n\r\n    if (!fetchedImage.img) uploadedImgRef.current.src = \" \";\r\n    else {\r\n      const src = URL.createObjectURL(fetchedImage.img);\r\n      uploadedImgRef.current.src = src;\r\n    }\r\n    setChoosingImg(false);\r\n  };\r\n\r\n  const handleConfirmImg = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"blob\", uploadProfileImgBtnRef.current.files[0]);\r\n\r\n    fetch(\"/profile/set-profile-img\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then(() => {\r\n        window.location.reload();\r\n        setChoosingImg(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        handleCancelChoosing();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"profile-img-container\">\r\n      <div id=\"profile-img-frame\" style={{ display: \"flex\" }}>\r\n        <img id=\"profile-img\" ref={uploadedImgRef} />\r\n\r\n        {props.isMyProfile ? (\r\n          <div\r\n            id=\"upload-profile-img-btn\"\r\n            onClick={() => {\r\n              uploadProfileImgBtnRef.current.click();\r\n            }}\r\n          >\r\n            <input\r\n              type=\"file\"\r\n              ref={uploadProfileImgBtnRef}\r\n              style={{ display: \"none\" }}\r\n              accept=\"image/*\"\r\n              onChange={handleSelectImg}\r\n            />\r\n            <IconButton\r\n              disableRipple\r\n              style={{ backgroundColor: \"transparent\" }}\r\n            >\r\n              <AddAPhotoIcon />\r\n            </IconButton>\r\n          </div>\r\n        ) : null}\r\n\r\n        {choosingImg ? (\r\n          <>\r\n            <div\r\n              id=\"cancel-upload-profile-img-btn\"\r\n              onClick={handleCancelChoosing}\r\n            >\r\n              <IconButton disableRipple>\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div id=\"confirm-upload-profile-img-btn\" onClick={handleConfirmImg}>\r\n              <IconButton disableRipple>\r\n                <CheckCircleIcon />\r\n              </IconButton>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileImg;\r\n","E:\\sokial\\sokial\\src\\components\\profilePostsOption.js",["201","202","203","204","205"],"E:\\sokial\\sokial\\src\\components\\profileFriendsOption.js",["206","207","208"],"import { Grid } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FriendEntryProfileFriendsOption from \"./friendEntryProfileFriendsOption.\";\r\n\r\nconst ProfileFriendsOption = ({ identity, profileData }) => {\r\n  const numToShow = 40;\r\n  const [noMoreFriends, setNoMoreFriedns] = useState(false);\r\n  const [waitingForMoreFriends, setWaitingForMoreFriends] = useState(true);\r\n  const [fetchedFriends, setFetchedFriends] = useState([]);\r\n  const [friendsDivs, setFriendsDivs] = useState([]);\r\n\r\n  const isNearToBottom = () => {\r\n    return (\r\n      document.body.getBoundingClientRect().bottom <= window.innerHeight * 5\r\n    );\r\n  };\r\n\r\n  const pushMoreFriendsToView = () => {\r\n    let leftPtr = friendsDivs.length;\r\n    let rightPtr = Math.min(fetchedFriends.length, leftPtr + numToShow);\r\n    let tmpArr = [];\r\n\r\n    for (let i = leftPtr; i < rightPtr; i++) {\r\n      tmpArr.push(\r\n        <FriendEntryProfileFriendsOption\r\n          friendData={{\r\n            id: fetchedFriends[i].id,\r\n            firstName: fetchedFriends[i].first_name,\r\n            lastName: fetchedFriends[i].last_name,\r\n            profileImgPath: fetchedFriends[i].profile_photo_path,\r\n          }}\r\n          identity={identity}\r\n          entryIndex={tmpArr.length + friendsDivs.length}\r\n        />\r\n      );\r\n    }\r\n\r\n    setWaitingForMoreFriends(false);\r\n    setFriendsDivs(friendsDivs.concat(tmpArr));\r\n  };\r\n\r\n  document.body.onscroll = () => {\r\n    console.log(\r\n      fetchedFriends.length,\r\n      \"wait: \",\r\n      waitingForMoreFriends,\r\n      noMoreFriends\r\n    );\r\n    if (!noMoreFriends && isNearToBottom() && !waitingForMoreFriends) {\r\n      setWaitingForMoreFriends(true);\r\n    }\r\n  };\r\n\r\n  // To fetch\r\n  useEffect(() => {\r\n    fetch(`/get-friends?friendsOfId=${profileData.id}`, { method: \"GET\" })\r\n      .then((res) => {\r\n        if (res.ok) return res.json();\r\n        else throw new Error(\"Can't fetch friends\");\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Friends\", res);\r\n        setFetchedFriends(res.friends);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR :: \", err.message);\r\n      });\r\n  }, []);\r\n\r\n  // See if all is done\r\n  useEffect(() => {\r\n    if (friendsDivs.length === fetchedFriends.length) {\r\n      setNoMoreFriedns(true);\r\n    }\r\n  }, [friendsDivs.length]);\r\n\r\n  // To take a safe space, if there is some news in the fetchedFriends array, then may be there is more.\r\n  useEffect(() => {\r\n    setNoMoreFriedns(false);\r\n  }, [fetchedFriends.length]);\r\n\r\n  //  If waiting, go and push more entries\r\n  useEffect(() => {\r\n    if (waitingForMoreFriends && !noMoreFriends) {\r\n      pushMoreFriendsToView();\r\n    }\r\n  }, [waitingForMoreFriends]);\r\n\r\n  return (\r\n    <Grid container id=\"profile-friends-option-friends-container\" spacing={1}>\r\n      {friendsDivs}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileFriendsOption;\r\n","E:\\sokial\\sokial\\src\\components\\friendEntryProfileFriendsOption..js",["209","210","211"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { Grid, Button, IconButton } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Avatar from \"./../images/default_profile_image.png\";\r\n\r\nconst FriendEntryProfileFriendsOption = ({\r\n  friendData,\r\n  entryIndex,\r\n  identity,\r\n}) => {\r\n  const [profileImg, setProfileImg] = useState(null);\r\n  const profileImgRef = useRef(null);\r\n\r\n  // Setting profile image\r\n  useEffect(() => {\r\n    if (profileImg && profileImgRef.current) {\r\n      profileImgRef.current.src = profileImg;\r\n    } else if (profileImgRef.current) {\r\n      profileImgRef.current.src = Avatar;\r\n    }\r\n  }, [profileImg, profileImgRef]);\r\n\r\n  // To fetch profile image\r\n  useEffect(() => {\r\n    if (entryIndex < 10) console.log(entryIndex);\r\n    if (friendData.profileImgPath)\r\n      // If the profile image path is not null\r\n      fetch(\r\n        `/get-profile-img/${friendData.id}?` +\r\n          new URLSearchParams({\r\n            profile_photo_path: friendData.profileImgPath,\r\n          })\r\n      )\r\n        .then((res) => {\r\n          if (res.ok) return res.blob();\r\n          else\r\n            throw new Error(\r\n              `Can't fetch profile image of the friend ${friendData.id}`\r\n            );\r\n        })\r\n        .then((img) => {\r\n          setProfileImg(URL.createObjectURL(img));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n  }, [friendData.profileImgPath]);\r\n\r\n  return (\r\n    <Grid item className=\"friend-entry\" xs={12} sm={6} lg={6}>\r\n      <div className=\"friend-entry-left-col\">\r\n        <a href={`${window.location.origin}/profile?id=${friendData.id}`}>\r\n          <img className=\"friend-entry-profile-img\" ref={profileImgRef} />\r\n        </a>\r\n\r\n        <a\r\n          className=\"friend-entry-profile-name clickable-account-name\"\r\n          href={`${window.location.origin}/profile?id=${friendData.id}`}\r\n        >\r\n          {`${friendData.firstName} ${friendData.lastName}`}\r\n        </a>\r\n      </div>\r\n\r\n      {identity.id !== friendData.id ? (\r\n        <IconButton>\r\n          <MoreHorizIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FriendEntryProfileFriendsOption;\r\n",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":4,"column":10,"nodeType":"218","messageId":"219","endLine":4,"endColumn":14},{"ruleId":"216","severity":1,"message":"220","line":6,"column":8,"nodeType":"218","messageId":"219","endLine":6,"endColumn":15},{"ruleId":"216","severity":1,"message":"221","line":7,"column":8,"nodeType":"218","messageId":"219","endLine":7,"endColumn":12},{"ruleId":"216","severity":1,"message":"222","line":10,"column":10,"nodeType":"218","messageId":"219","endLine":10,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":46,"column":38,"nodeType":"225","messageId":"226","endLine":46,"endColumn":40},{"ruleId":"223","severity":1,"message":"224","line":47,"column":38,"nodeType":"225","messageId":"226","endLine":47,"endColumn":40},{"ruleId":"223","severity":1,"message":"224","line":59,"column":40,"nodeType":"225","messageId":"226","endLine":59,"endColumn":42},{"ruleId":"212","replacedBy":"227"},{"ruleId":"214","replacedBy":"228"},{"ruleId":"216","severity":1,"message":"222","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":18},{"ruleId":"216","severity":1,"message":"229","line":1,"column":20,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"229","line":1,"column":20,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"230","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":19},{"ruleId":"216","severity":1,"message":"231","line":1,"column":21,"nodeType":"218","messageId":"219","endLine":1,"endColumn":37},{"ruleId":"216","severity":1,"message":"232","line":1,"column":39,"nodeType":"218","messageId":"219","endLine":1,"endColumn":43},{"ruleId":"216","severity":1,"message":"233","line":1,"column":45,"nodeType":"218","messageId":"219","endLine":1,"endColumn":51},{"ruleId":"216","severity":1,"message":"220","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":15},{"ruleId":"216","severity":1,"message":"234","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":66,"column":6,"nodeType":"237","endLine":66,"endColumn":24,"suggestions":"238"},{"ruleId":"235","severity":1,"message":"239","line":66,"column":7,"nodeType":"240","endLine":66,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":68,"column":40,"nodeType":"225","messageId":"226","endLine":68,"endColumn":42},{"ruleId":"223","severity":1,"message":"224","line":90,"column":30,"nodeType":"225","messageId":"226","endLine":90,"endColumn":32},{"ruleId":"223","severity":1,"message":"224","line":96,"column":33,"nodeType":"225","messageId":"226","endLine":96,"endColumn":35},{"ruleId":"235","severity":1,"message":"241","line":26,"column":6,"nodeType":"237","endLine":26,"endColumn":66,"suggestions":"242"},{"ruleId":"223","severity":1,"message":"224","line":70,"column":48,"nodeType":"225","messageId":"226","endLine":70,"endColumn":50},{"ruleId":"243","severity":1,"message":"244","line":74,"column":9,"nodeType":"245","endLine":77,"endColumn":10},{"ruleId":"223","severity":1,"message":"224","line":96,"column":52,"nodeType":"225","messageId":"226","endLine":96,"endColumn":54},{"ruleId":"216","severity":1,"message":"246","line":9,"column":10,"nodeType":"218","messageId":"219","endLine":9,"endColumn":13},{"ruleId":"235","severity":1,"message":"247","line":54,"column":6,"nodeType":"237","endLine":58,"endColumn":4,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"244","line":87,"column":15,"nodeType":"245","endLine":87,"endColumn":79},{"ruleId":"223","severity":1,"message":"224","line":95,"column":32,"nodeType":"225","messageId":"226","endLine":95,"endColumn":34},{"ruleId":"223","severity":1,"message":"224","line":126,"column":59,"nodeType":"225","messageId":"226","endLine":126,"endColumn":61},{"ruleId":"223","severity":1,"message":"224","line":140,"column":58,"nodeType":"225","messageId":"226","endLine":140,"endColumn":60},{"ruleId":"249","severity":1,"message":"250","line":81,"column":47,"nodeType":"251","messageId":"252","endLine":81,"endColumn":49},{"ruleId":"216","severity":1,"message":"222","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":18},{"ruleId":"216","severity":1,"message":"253","line":1,"column":20,"nodeType":"218","messageId":"219","endLine":1,"endColumn":29},{"ruleId":"216","severity":1,"message":"254","line":9,"column":10,"nodeType":"218","messageId":"219","endLine":9,"endColumn":15},{"ruleId":"216","severity":1,"message":"255","line":3,"column":3,"nodeType":"218","messageId":"219","endLine":3,"endColumn":9},{"ruleId":"216","severity":1,"message":"256","line":4,"column":3,"nodeType":"218","messageId":"219","endLine":4,"endColumn":10},{"ruleId":"216","severity":1,"message":"257","line":6,"column":3,"nodeType":"218","messageId":"219","endLine":6,"endColumn":13},{"ruleId":"216","severity":1,"message":"233","line":7,"column":3,"nodeType":"218","messageId":"219","endLine":7,"endColumn":9},{"ruleId":"216","severity":1,"message":"258","line":12,"column":8,"nodeType":"218","messageId":"219","endLine":12,"endColumn":25},{"ruleId":"216","severity":1,"message":"259","line":15,"column":7,"nodeType":"218","messageId":"219","endLine":15,"endColumn":36},{"ruleId":"216","severity":1,"message":"260","line":16,"column":16,"nodeType":"218","messageId":"219","endLine":16,"endColumn":23},{"ruleId":"261","severity":2,"message":"262","line":31,"column":16,"nodeType":"218","messageId":"263","endLine":31,"endColumn":45},{"ruleId":"216","severity":1,"message":"230","line":3,"column":3,"nodeType":"218","messageId":"219","endLine":3,"endColumn":12},{"ruleId":"216","severity":1,"message":"231","line":4,"column":3,"nodeType":"218","messageId":"219","endLine":4,"endColumn":19},{"ruleId":"216","severity":1,"message":"232","line":5,"column":3,"nodeType":"218","messageId":"219","endLine":5,"endColumn":7},{"ruleId":"216","severity":1,"message":"264","line":10,"column":3,"nodeType":"218","messageId":"219","endLine":10,"endColumn":16},{"ruleId":"216","severity":1,"message":"265","line":15,"column":8,"nodeType":"218","messageId":"219","endLine":15,"endColumn":30},{"ruleId":"216","severity":1,"message":"258","line":16,"column":8,"nodeType":"218","messageId":"219","endLine":16,"endColumn":25},{"ruleId":"216","severity":1,"message":"230","line":2,"column":3,"nodeType":"218","messageId":"219","endLine":2,"endColumn":12},{"ruleId":"216","severity":1,"message":"231","line":3,"column":3,"nodeType":"218","messageId":"219","endLine":3,"endColumn":19},{"ruleId":"216","severity":1,"message":"232","line":4,"column":3,"nodeType":"218","messageId":"219","endLine":4,"endColumn":7},{"ruleId":"216","severity":1,"message":"233","line":5,"column":3,"nodeType":"218","messageId":"219","endLine":5,"endColumn":9},{"ruleId":"216","severity":1,"message":"266","line":6,"column":3,"nodeType":"218","messageId":"219","endLine":6,"endColumn":9},{"ruleId":"216","severity":1,"message":"267","line":7,"column":3,"nodeType":"218","messageId":"219","endLine":7,"endColumn":14},{"ruleId":"216","severity":1,"message":"268","line":8,"column":3,"nodeType":"218","messageId":"219","endLine":8,"endColumn":16},{"ruleId":"216","severity":1,"message":"264","line":9,"column":3,"nodeType":"218","messageId":"219","endLine":9,"endColumn":16},{"ruleId":"216","severity":1,"message":"269","line":1,"column":37,"nodeType":"218","messageId":"219","endLine":1,"endColumn":46},{"ruleId":"216","severity":1,"message":"230","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":19},{"ruleId":"243","severity":1,"message":"244","line":61,"column":9,"nodeType":"245","endLine":61,"endColumn":71},{"ruleId":"216","severity":1,"message":"270","line":9,"column":8,"nodeType":"218","messageId":"219","endLine":9,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":46,"column":50,"nodeType":"225","messageId":"226","endLine":46,"endColumn":52},{"ruleId":"216","severity":1,"message":"222","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":18},{"ruleId":"216","severity":1,"message":"253","line":1,"column":20,"nodeType":"218","messageId":"219","endLine":1,"endColumn":29},{"ruleId":"216","severity":1,"message":"230","line":3,"column":3,"nodeType":"218","messageId":"219","endLine":3,"endColumn":12},{"ruleId":"216","severity":1,"message":"231","line":4,"column":3,"nodeType":"218","messageId":"219","endLine":4,"endColumn":19},{"ruleId":"216","severity":1,"message":"232","line":5,"column":3,"nodeType":"218","messageId":"219","endLine":5,"endColumn":7},{"ruleId":"216","severity":1,"message":"233","line":6,"column":3,"nodeType":"218","messageId":"219","endLine":6,"endColumn":9},{"ruleId":"216","severity":1,"message":"271","line":9,"column":8,"nodeType":"218","messageId":"219","endLine":9,"endColumn":21},{"ruleId":"216","severity":1,"message":"272","line":10,"column":8,"nodeType":"218","messageId":"219","endLine":10,"endColumn":24},{"ruleId":"216","severity":1,"message":"273","line":14,"column":10,"nodeType":"218","messageId":"219","endLine":14,"endColumn":36},{"ruleId":"216","severity":1,"message":"274","line":18,"column":24,"nodeType":"218","messageId":"219","endLine":18,"endColumn":39},{"ruleId":"235","severity":1,"message":"275","line":33,"column":6,"nodeType":"237","endLine":33,"endColumn":74,"suggestions":"276"},{"ruleId":"243","severity":1,"message":"244","line":76,"column":9,"nodeType":"245","endLine":76,"endColumn":54},{"ruleId":"216","severity":1,"message":"230","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":19},{"ruleId":"216","severity":1,"message":"231","line":1,"column":21,"nodeType":"218","messageId":"219","endLine":1,"endColumn":37},{"ruleId":"216","severity":1,"message":"233","line":1,"column":45,"nodeType":"218","messageId":"219","endLine":1,"endColumn":51},{"ruleId":"216","severity":1,"message":"222","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":18},{"ruleId":"216","severity":1,"message":"253","line":3,"column":20,"nodeType":"218","messageId":"219","endLine":3,"endColumn":29},{"ruleId":"235","severity":1,"message":"277","line":68,"column":6,"nodeType":"237","endLine":68,"endColumn":8,"suggestions":"278"},{"ruleId":"235","severity":1,"message":"279","line":75,"column":6,"nodeType":"237","endLine":75,"endColumn":26,"suggestions":"280"},{"ruleId":"235","severity":1,"message":"281","line":87,"column":6,"nodeType":"237","endLine":87,"endColumn":29,"suggestions":"282"},{"ruleId":"216","severity":1,"message":"233","line":2,"column":16,"nodeType":"218","messageId":"219","endLine":2,"endColumn":22},{"ruleId":"235","severity":1,"message":"283","line":47,"column":6,"nodeType":"237","endLine":47,"endColumn":33,"suggestions":"284"},{"ruleId":"243","severity":1,"message":"244","line":53,"column":11,"nodeType":"245","endLine":53,"endColumn":75},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Posting' is defined but never used.","'Post' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["285"],["286"],"'useRef' is defined but never used.","'TextField' is defined but never used.","'TextareaAutosize' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'PostsProfileSection' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isMyProfile' and 'params'. Either include them or remove the dependency array.","ArrayExpression",["287"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["288"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'set' is defined but never used.","React Hook useEffect has a missing dependency: 'props.postOwnerData'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["289"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'Badge' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'NotificationsIcon' is defined but never used.","'FriendshipNotificationsButton' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-undef","'friendshipNotificationsButton' is not defined.","undef","'DialogActions' is defined but never used.","'NotificationsContainer' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'Container' is defined but never used.","'generalFunctions' is defined but never used.","'AddCircleIcon' is defined but never used.","'RemoveCircleIcon' is defined but never used.","'friendshipRelatedFunctions' is defined but never used.","'setFetchedImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.profileData.profile_photo_path'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["290"],"React Hook useEffect has a missing dependency: 'profileData.id'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has a missing dependency: 'fetchedFriends.length'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'noMoreFriends' and 'pushMoreFriendsToView'. Either include them or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'entryIndex' and 'friendData.id'. Either include them or remove the dependency array.",["294"],"no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [isMyProfile, params]",{"range":"311","text":"312"},"Update the dependencies array to be: [identity, postingAuthorProfileImgRef]",{"range":"313","text":"314"},"Update the dependencies array to be: [authorProfileImgRef, props.postOwnerData, props.postOwnerData.profileImg]",{"range":"315","text":"316"},"Update the dependencies array to be: [props.profileData.profileImg, props.profileData.profile_photo_path, uploadedImgRef]",{"range":"317","text":"318"},"Update the dependencies array to be: [profileData.id]",{"range":"319","text":"320"},"Update the dependencies array to be: [fetchedFriends.length, friendsDivs.length]",{"range":"321","text":"322"},"Update the dependencies array to be: [noMoreFriends, pushMoreFriendsToView, waitingForMoreFriends]",{"range":"323","text":"324"},"Update the dependencies array to be: [entryIndex, friendData.id, friendData.profileImgPath]",{"range":"325","text":"326"},[2159,2177],"[isMyProfile, params]",[813,873],"[identity, postingAuthorProfileImgRef]",[1574,1670],"[authorProfileImgRef, props.postOwnerData, props.postOwnerData.profileImg]",[1183,1251],"[props.profileData.profileImg, props.profileData.profile_photo_path, uploadedImgRef]",[2145,2147],"[profileData.id]",[2299,2319],"[fetchedFriends.length, friendsDivs.length]",[2677,2700],"[noMoreFriends, pushMoreFriendsToView, waitingForMoreFriends]",[1455,1482],"[entryIndex, friendData.id, friendData.profileImgPath]"]